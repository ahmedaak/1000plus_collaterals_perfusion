allpts$iv_tPR[allpts$iv_tPR==2] <- "Yes" # CHECK WITH KERSTEN IF THIS IS CORRECTLY CODED
allpts$iv_tPR <- factor(allpts$iv_tPR)
allpts$circulation[allpts$circulation==1] <- "Anterior"
allpts$circulation[allpts$circulation==2] <- "Posterior"
allpts$circulation <- factor(allpts$circulation)
# remove certain variables
allpts$no_recan_1 <- c()
allpts$VAR00002 <- c()
allpts$TSI_dich <- c()
# Defines whether (T) or not (F) to show outliers in boxplots
OL = F
# descriptive stats
#html(describe(allpts[,-1]))
dfSummary(allpts[,-1], plain.ascii = F, style="grid", graph.col = F)
# plot recanalization according to reperfusion status
barplot(table(allpts$reperf, allpts$Rekan), legend.text = c("No reperfusion", "Reperfusion"), col=c("#1b9e77","#d95f02"), xlab="Recanalization", ylab="Number of patients", xpd=F,args.legend = list(x = "topleft"), ylim=c(0,80))
# cross-tabulation of recanalization/reperfusion
kable(table(allpts$reperf, allpts$Rekan)) %>%
kable_styling(full_width=F, position="center") %>%
add_header_above(c(" "=1, "Recanalization"=3)) %>%
group_rows("Reperfusion",1,2)
# test for differences between recanalization and reperfusion
print(chisq.test(table(allpts$reperf, allpts$Rekan)))
boxplot(relTmax_4_change~circulation, data=allpts, xlab="Circulation", ylab="Extent of reperfusion (%)", outline=OL)
# test if circulation has influence on reperfusion in non-recanalizers
model_1 <- lmrob(allpts[allpts$Rekan=="None",]$relTmax_4_change~allpts[allpts$Rekan=="None",]$circulation)
# test if circulation has influence on reperfusion in non-recanalizers ADJUSTING FOR iv TPA
model_2 <- lmrob(allpts[allpts$Rekan=="None",]$relTmax_4_change~allpts[allpts$Rekan=="None",]$circulation*allpts[allpts$Rekan=="None",]$iv_tPR)
# test if circulation has influence on reperfusion in recanalizers (full OR partial)
model_3 <- lmrob(allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$relTmax_4_change~allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$circulation)
# test if circulation has influence on reperfusion in recanalizers (full OR partial) ADJUSTING FOR iv TPA
model_4 <- lmrob(allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$relTmax_4_change~allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$circulation*allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$iv_tPR)
stargazer(model_1, model_2, model_3,model_4, type="html", align = F, style="all", single.row=T)
# check assumptions of robust GLM
#par(mfrow=c(3,2))
#plot(lmrob(allpts$relTmax_4_change~allpts$Rekan + allpts$circulation + allpts$TSI + allpts$iv_tPR))
# perform robust GLM
model_5 <- lmrob(allpts$relTmax_4_change~allpts$Rekan + allpts$iv_tPR + allpts$TSI + allpts$HIR1)
# plot extent of reperfusion in different recanalization grades
par(mfrow=c(1,1))
boxplot(relTmax_4_change~Rekan, data=allpts, col=c("#1b9e77","#1b9e77"), ylab="Relative Tmax change", outline=OL)
stargazer(model_5, type="html", align = F, style="all", single.row=T)
plot(allpts$HIR1, allpts$DWIvol_d1, xlab="Hypoperfusion intensity ratio", ylab="DWI lesion volume on day 1")
print(cor.test(allpts$HIR1, allpts$DWIvol_d1, method="spearman"))
plot(allpts$HIR1, allpts$NIHSS_ad, xlab="Hypoperfusion intensity ratio", ylab="NIHSS on admission")
print(cor.test(allpts$HIR1, allpts$NIHSS_ad, method="spearman"))
plot(allpts$HIR1, allpts$DWIgrowth, xlab="Hypoperfusion intensity ratio", ylab="Absolute DWI lesion growth (mL)")
print(cor.test(allpts$HIR1, allpts$DWIgrowth, method="spearman"))
plot(allpts$HIR1, allpts$rel_DWIgrowth, xlab="Hypoperfusion intensity ratio", ylab="Relative DWI lesion growth (%)")
print(cor.test(allpts$HIR1, allpts$rel_DWIgrowth, method="spearman"))
# perform robust GLM
model_6 <- lmrob(allpts$mRS_d90~allpts$Rekan + allpts$reperf + allpts$NIHSS_ad + allpts$iv_tPR + allpts$HIR1)
boxplot(mRS_d90~Rekan + reperf, data=allpts, col=c("#1b9e77","#1b9e77","#1b9e77","#d95f02","#d95f02","#d95f02"), ylab="mRS day 90", outline=OL, xaxt="n")
axis(side=1, at=c(1,2,3,4,5,6), labels=c("None","Partial","Full","None","Partial","Full"))
legend("topright", legend = c("Non-reperfused","Reperfused"), fill=c("#1b9e77","#d95f02"))
stargazer(model_6, type="html", align = F, style="all", single.row=T)
# perform robust GLM
model_7 <- lmrob(allpts$rel_DWIgrowth~allpts$Rekan + allpts$reperf + allpts$iv_tPR + allpts$HIR1)
boxplot(rel_DWIgrowth~Rekan + reperf, data=allpts,col=c("#1b9e77","#1b9e77","#1b9e77","#d95f02","#d95f02","#d95f02"), ylab="Relative DWI growth", outline=OL, xaxt="n")
axis(side=1, at=c(1,2,3,4,5,6), labels=c("None","Partial","Full","None","Partial","Full"))
legend("topleft", legend = c("Non-reperfused","Reperfused"), fill=c("#1b9e77","#d95f02"))
stargazer(model_7, type="html", align = F, style="all", single.row=T)
model_8 <- lmrob(allpts$DWIgrowth~allpts$Rekan + allpts$reperf + allpts$iv_tPR + allpts$HIR1)
boxplot(DWIgrowth~Rekan + reperf, data=allpts,col=c("#1b9e77","#1b9e77","#1b9e77","#d95f02","#d95f02","#d95f02"), ylab="Absolute DWI growth", outline=OL, xaxt="n")
axis(side=1, at=c(1,2,3,4,5,6), labels=c("None","Partial","Full","None","Partial","Full"))
legend("topleft", legend = c("Non-reperfused","Reperfused"), fill=c("#1b9e77","#d95f02"))
stargazer(model_8, type="html", align = F, style="all", single.row=T)
# choose non-recanalizers
nonrecan <- allpts[allpts$Rekan=="None",]
# choose non-recanalizers with reperfusion
nonrecan_reperf <- nonrecan[nonrecan$reperf=="Yes",]
# choose non-recanalizers with no reperfusion
nonrecan_noreperf <- nonrecan[nonrecan$reperf=="No",]
# barplot of reperfusion vs infarct growth
barplot(table(nonrecan$reperf, nonrecan$infarct_growth),legend.text = c("No infarct growth", "Infarct growth"), col=c("#1b9e77","#d95f02"), xlab="Reperfusion", ylab="Number of patients", xpd=F,args.legend = list(x = "topright"), ylim=c(0,40), main="Non-recanalizers")
# crosstab of reperfusion vs infarct growth
kable(table(nonrecan$reperf, nonrecan$infarct_growth)) %>%
kable_styling(full_width=F, position="center") %>%
add_header_above(c(" "=1, "Infarct growth"=2)) %>%
group_rows("Reperfusion",1,2)
# test for differences between reperfusion and infarct growth
print(chisq.test(table(nonrecan$reperf, nonrecan$infarct_growth)))
#################################
# choose recanalizers
recan <- allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]
# choose recanalizers with reperfusion
recan_reperf <- recan[recan$reperf=="Yes",]
# choose recanalizers with no reperfusion
recan_noreperf <- recan[recan$reperf=="No",]
# barplot of reperfusion vs infarct growth
barplot(table(recan$reperf, recan$infarct_growth),legend.text = c("No infarct growth", "Infarct growth"), col=c("#1b9e77","#d95f02"), xlab="Reperfusion", ylab="Number of patients", xpd=F,args.legend = list(x = "topright"), ylim=c(0,80), main="Recanalizers")
# crosstab of reperfusion vs infarct growth
kable(table(recan$reperf, recan$infarct_growth)) %>%
kable_styling(full_width=F, position="center") %>%
add_header_above(c(" "=1, "Infarct growth"=2)) %>%
group_rows("Reperfusion",1,2)
# test for differences between reperfusion and infarct growth
print(chisq.test(table(recan$reperf, recan$infarct_growth)))
recan
recan$reperf
recan$infarct_growth
barplot(table(nonrecan$reperf, nonrecan$infarct_growth))
nonrecan_noreperf
# barplot of reperfusion vs infarct growth
barplot(table(nonrecan$infarct_growth,nonrecan$reperf),legend.text = c("No infarct growth", "Infarct growth"), col=c("#1b9e77","#d95f02"), xlab="Reperfusion", ylab="Number of patients", xpd=F,args.legend = list(x = "topright"), ylim=c(0,40), main="Non-recanalizers")
barplot(prop.table(recan$infarct_growth,recan$reperf))
barplot(prop.table(matrix(recan$infarct_growth,recan$reperf)))
barplot(prop.table(data.frame(recan$infarct_growth,recan$reperf)))
barplot(prop.table(cbind(recan$infarct_growth,recan$reperf)))
cbind(recan$infarct_growth,recan$reperf)
barplot(prop.table(table(cbind(recan$infarct_growth,recan$reperf))))
data.frame(recan$infarct_growth, recan$reperf)
recan_data <- data.frame(recan$infarct_growth, recan$reperf); barplot(table(recan_data),legend.text = c("No infarct growth", "Infarct growth"), col=c("#1b9e77","#d95f02"), xlab="Reperfusion", ylab="Number of patients", xpd=F,args.legend = list(x = "topleft"), main="Recanalizers")
?apply
nonrecan_data_p <- apply(nonrecan_data, 2, function(x){x*100/sum(x,na.rm=T)})
nonrecan_data <- data.frame(nonrecan$infarct_growth, nonrecan$reperf)
nonrecan_data_p <- apply(nonrecan_data, 2, function(x){x*100/sum(x,na.rm=T)})
nonrecan_data_p <- apply(nonrecan_data, 2, function(x){x*100/sum(x,na.rm=T)})
x
nonrecan_data_p <- apply(nonrecan_data, 2, function(x){x.*100/sum(x,na.rm=T)})
nonrecan_data_p <- apply(nonrecan_data, 2, function(x){x*100/sum(x,na.rm=T)})
nonrecan_data
nonrecan_data <- matrix(nonrecan$infarct_growth, nonrecan$reperf)
chisq.test(recan_data)
chisq.test(table(recan_data))
chisq.test(table(nonrecan_data))
install.packages("vioplot")
library(vioplot)
vioplot(DWIgrowth~Rekan + reperf, data=allpts)
vioplot(DWIgrowth~Rekan)
vioplot(allpts$DWIgrowth)
stargazer(allpts[,-1])
?stargazer
stargazer(allpts[,-1], type="html")
stargazer(allpts, type="html")
stargazer(allpts[,-1], type="latex")
stargazer(allpts[,-1], type="html")
allpts[,-1]
stargazer(allpts[,2], type="html")
View(allpts)
str(allpts[,2])
str(allpts[,2,5])
View(allpts)
View(allpts)
allpts[allpts=="NaN"]<-NA
str(allpts)
?dfSummary
knitr::opts_chunk$set(echo = TRUE)
# necessary packages
library(robustbase)
library(knitr)
library(xtable)
library(Hmisc)
library(TOSTER)
library(stargazer)
library(summarytools)
library(magrittr)
library(kableExtra)
# load data
allpts <- read.table("Carmela_Project.csv", header = T, sep=";")
colnames(allpts)[1] <- "ID"
# load volumetric data
auto_pts <- read.table("ALLVOLS_automated_AK_20180605.csv", header=T, sep=";") # patients automatically delineated
manual_pts <- read.table("ALLVOLS_manual_AK_20180605.csv", header=T, sep=";") # patients manually delineated
# remove # of voxels, keep only volumes (in mm3)
auto_pts <- auto_pts[,c(1,3,5,7,9,11,13)]
manual_pts <- manual_pts[,c(1,3,5,7,9,11,13)]
# convert volumes to mL (cm3)
auto_pts[,-1] <- auto_pts[,-1]*0.001
manual_pts[,-1] <- manual_pts[,-1]*0.001
# combine manual and automated volumes
vols_all_pts <- rbind(auto_pts, manual_pts)
# exclude subject 86 (not in Kersten's main dataset)
vols_all_pts <- vols_all_pts[!vols_all_pts$ID=="86",]
# calculate HIR for days 1 and 2
vols_all_pts$HIR1 <- vols_all_pts$Tmax_D1_.8_volume/vols_all_pts$Tmax_D1_.2_volume
vols_all_pts$HIR2 <- vols_all_pts$Tmax_D2_.8_volume/vols_all_pts$Tmax_D2_.2_volume
# merge volumes and HIR with the rest of the data
allpts <- merge(allpts, vols_all_pts, by = "ID")
# rename Tmax volume variables to include threshold (>6s)
allpts$Tmax_D1_.6_volume <- allpts$Tmax_vol_d1
allpts$Tmax_D2_.6_volume <- allpts$Tmax_vol_d2
allpts$Tmax_vol_d1 <- c()
allpts$Tmax_vol_d2 <- c()
allpts$Tmax_change <- c()
allpts$relTmax_change <- c()
# create change variables for other thresholds (>4s)
allpts$Tmax_4_change <- allpts$Tmax_D2_.4_volume - allpts$Tmax_D1_.4_volume
allpts$relTmax_4_change <- (allpts$Tmax_4_change/allpts$Tmax_D1_.4_volume)*100
# create necessary variables (reperfusion / infarct growth binarized cut-offs)
allpts$reperf[allpts$relTmax_4_change<=-50] <- "Yes"
allpts$reperf[allpts$relTmax_4_change>-50] <- "No"
allpts$reperf <- factor(allpts$reperf)
allpts$infarct_growth[allpts$DWIgrowth>=7] <- "Yes"
allpts$infarct_growth[allpts$DWIgrowth<7] <- "No"
allpts$infarct_growth <- factor(allpts$infarct_growth)
# recode recanalization variable
allpts$Rekan[allpts$Rekan==0] <- "None" # no recanalization
allpts$Rekan[allpts$Rekan==1] <- "Full" # full recanalization
allpts$Rekan[allpts$Rekan==2] <- "Partial" # partial recanalization
allpts$Rekan <- factor(allpts$Rekan)
allpts$Rekan <- factor(allpts$Rekan,levels(allpts$Rekan)[c(2,3,1)])
# recode other categorical variables
allpts$sex[allpts$sex==1] <- "Male"
allpts$sex[allpts$sex==2] <- "Female"
allpts$sex <- factor(allpts$sex)
allpts$iv_tPR[allpts$iv_tPR==0] <- "No"
allpts$iv_tPR[allpts$iv_tPR==1] <- "Yes"
allpts$iv_tPR[allpts$iv_tPR==2] <- "Yes" # CHECK WITH KERSTEN IF THIS IS CORRECTLY CODED
allpts$iv_tPR <- factor(allpts$iv_tPR)
allpts$circulation[allpts$circulation==1] <- "Anterior"
allpts$circulation[allpts$circulation==2] <- "Posterior"
allpts$circulation <- factor(allpts$circulation)
# remove certain variables
allpts$no_recan_1 <- c()
allpts$VAR00002 <- c()
allpts$TSI_dich <- c()
# correctly code NaNs
allpts[allpts=="NaN"]<-NA
# Defines whether (T) or not (F) to show outliers in boxplots
OL = F
View(allpts)
knitr::opts_chunk$set(echo = TRUE)
# necessary packages
library(robustbase)
library(knitr)
library(xtable)
library(Hmisc)
library(TOSTER)
library(stargazer)
library(summarytools)
library(magrittr)
library(kableExtra)
# load data
allpts <- read.table("Carmela_Project.csv", header = T, sep=";")
colnames(allpts)[1] <- "ID"
# load volumetric data
auto_pts <- read.table("ALLVOLS_automated_AK_20180605.csv", header=T, sep=";") # patients automatically delineated
manual_pts <- read.table("ALLVOLS_manual_AK_20180605.csv", header=T, sep=";") # patients manually delineated
# remove # of voxels, keep only volumes (in mm3)
auto_pts <- auto_pts[,c(1,3,5,7,9,11,13)]
manual_pts <- manual_pts[,c(1,3,5,7,9,11,13)]
# convert volumes to mL (cm3)
auto_pts[,-1] <- auto_pts[,-1]*0.001
manual_pts[,-1] <- manual_pts[,-1]*0.001
# combine manual and automated volumes
vols_all_pts <- rbind(auto_pts, manual_pts)
# exclude subject 86 (not in Kersten's main dataset)
vols_all_pts <- vols_all_pts[!vols_all_pts$ID=="86",]
# calculate HIR for days 1 and 2
vols_all_pts$HIR1 <- vols_all_pts$Tmax_D1_.8_volume/vols_all_pts$Tmax_D1_.2_volume
vols_all_pts$HIR2 <- vols_all_pts$Tmax_D2_.8_volume/vols_all_pts$Tmax_D2_.2_volume
# merge volumes and HIR with the rest of the data
allpts <- merge(allpts, vols_all_pts, by = "ID")
# rename Tmax volume variables to include threshold (>6s)
allpts$Tmax_D1_.6_volume <- allpts$Tmax_vol_d1
allpts$Tmax_D2_.6_volume <- allpts$Tmax_vol_d2
allpts$Tmax_vol_d1 <- c()
allpts$Tmax_vol_d2 <- c()
allpts$Tmax_change <- c()
allpts$relTmax_change <- c()
# create change variables for other thresholds (>4s)
allpts$Tmax_4_change <- allpts$Tmax_D2_.4_volume - allpts$Tmax_D1_.4_volume
allpts$relTmax_4_change <- (allpts$Tmax_4_change/allpts$Tmax_D1_.4_volume)*100
# create necessary variables (reperfusion / infarct growth binarized cut-offs)
allpts$reperf[allpts$relTmax_4_change<=-50] <- "Yes"
allpts$reperf[allpts$relTmax_4_change>-50] <- "No"
allpts$reperf <- factor(allpts$reperf)
allpts$infarct_growth[allpts$DWIgrowth>=7] <- "Yes"
allpts$infarct_growth[allpts$DWIgrowth<7] <- "No"
allpts$infarct_growth <- factor(allpts$infarct_growth)
# recode recanalization variable
allpts$Rekan[allpts$Rekan==0] <- "None" # no recanalization
allpts$Rekan[allpts$Rekan==1] <- "Full" # full recanalization
allpts$Rekan[allpts$Rekan==2] <- "Partial" # partial recanalization
allpts$Rekan <- factor(allpts$Rekan)
allpts$Rekan <- factor(allpts$Rekan,levels(allpts$Rekan)[c(2,3,1)])
# recode other categorical variables
allpts$sex[allpts$sex==1] <- "Male"
allpts$sex[allpts$sex==2] <- "Female"
allpts$sex <- factor(allpts$sex)
allpts$iv_tPR[allpts$iv_tPR==0] <- "No"
allpts$iv_tPR[allpts$iv_tPR==1] <- "Yes"
allpts$iv_tPR[allpts$iv_tPR==2] <- "Yes" # CHECK WITH KERSTEN IF THIS IS CORRECTLY CODED
allpts$iv_tPR <- factor(allpts$iv_tPR)
allpts$circulation[allpts$circulation==1] <- "Anterior"
allpts$circulation[allpts$circulation==2] <- "Posterior"
allpts$circulation <- factor(allpts$circulation)
# remove certain variables
allpts$no_recan_1 <- c()
allpts$VAR00002 <- c()
allpts$TSI_dich <- c()
# merge with variables defining occlusion location
occ_classfn <- read.table("occlusion_classfn.csv", header = T, sep=";")
allpts <- merge(allpts, occ_classfn, by = "ID")
# correctly code NaNs
allpts[allpts=="NaN"]<-NA
# Defines whether (T) or not (F) to show outliers in boxplots
OL = F
View(allpts)
# choose non-recanalizers
nonrecan <- allpts[allpts$Rekan=="None"&allpts$OCC_LOC_1=="PROXIMAL",]
nonrecan_data <- data.frame(nonrecan$infarct_growth, nonrecan$reperf)
# barplot of reperfusion vs infarct growth
barplot(table(nonrecan_data),legend.text = c("No infarct growth", "Infarct growth"), col=c("#1b9e77","#d95f02"), xlab="Reperfusion", ylab="Number of patients", xpd=F,args.legend = list(x = "topright"), main="Non-recanalizers")
# crosstab of reperfusion vs infarct growth
kable(table(nonrecan_data)) %>%
kable_styling(full_width=F, position="center") %>%
add_header_above(c(" "=1, "Reperfusion"=2)) %>%
group_rows("Infarct growth",1,2)
# test for differences between reperfusion and infarct growth
print(chisq.test(table(nonrecan$reperf, nonrecan$infarct_growth)))
# choose non-recanalizers
nonrecan <- allpts[allpts$Rekan=="None"&allpts$OCC_LOC_1=="DISTAL",]
nonrecan_data <- data.frame(nonrecan$infarct_growth, nonrecan$reperf)
# barplot of reperfusion vs infarct growth
barplot(table(nonrecan_data),legend.text = c("No infarct growth", "Infarct growth"), col=c("#1b9e77","#d95f02"), xlab="Reperfusion", ylab="Number of patients", xpd=F,args.legend = list(x = "topright"), main="Non-recanalizers")
# crosstab of reperfusion vs infarct growth
kable(table(nonrecan_data)) %>%
kable_styling(full_width=F, position="center") %>%
add_header_above(c(" "=1, "Reperfusion"=2)) %>%
group_rows("Infarct growth",1,2)
# test for differences between reperfusion and infarct growth
print(chisq.test(table(nonrecan$reperf, nonrecan$infarct_growth)))
# choose non-recanalizers
nonrecan <- allpts[allpts$Rekan=="None"&allpts$OCC_LOC_1=="PROXIMAL",]
nonrecan_data <- data.frame(nonrecan$infarct_growth, nonrecan$reperf)
# barplot of reperfusion vs infarct growth
barplot(table(nonrecan_data),legend.text = c("No infarct growth", "Infarct growth"), col=c("#1b9e77","#d95f02"), xlab="Reperfusion", ylab="Number of patients", xpd=F,args.legend = list(x = "topright"), main="Non-recanalizers")
# crosstab of reperfusion vs infarct growth
kable(table(nonrecan_data)) %>%
kable_styling(full_width=F, position="center") %>%
add_header_above(c(" "=1, "Reperfusion"=2)) %>%
group_rows("Infarct growth",1,2)
# test for differences between reperfusion and infarct growth
print(chisq.test(table(nonrecan$reperf, nonrecan$infarct_growth)))
?lmrob
str(allpts)
library(effects)
install.packages("effects")
library(effects)
allEffects(model_6)
model_6 <- lmrob(mRS_d90~Rekan*reperf + NIHSS_ad + iv_tPR + HIR1*OCC_LOC_1, data = allpts)
allEffects(model_6)
plot(allEffects(model_6))
plot(allEffects(model_6), multiline=T)
?allEffects
plot(allEffects(model_6), multiline=T, ci.style="bars")
par(mfrow=c(3,3));plot(allEffects(model_6), multiline=T, ci.style="bars")
par(mfrow=c(3,3))
par(mfrow=c(3,3));plot(allEffects(model_6), multiline=T, ci.style="bars")
par(mfrow=c(3,3));plot(allEffects(model_6), multiline=T, ci.style="bars")
par(mfrow=c(3,3));plot(allEffects(model_6), multiline=T, ci.style="bars")
par(mfrow=c(3,3));plot(allEffects(model_6), multiline=T, ci.style="bars")
par(mfrow=c(3,3));plot(allEffects(model_6), multiline=T, ci.style="bars")
par(mfrow=c(3,3));plot(allEffects(model_6), multiline=T, ci.style="bars")
par(mfrow=c(3,3));plot(allEffects(model_6), multiline=T, ci.style="bars")
par(mfrow=c(3,3));plot(allEffects(model_6), multiline=T, ci.style="bars")
?allEffects
View(all_pts)
View(allpts)
test <- data.frame(recan$infarct_growth, recan$reperf)
knitr::opts_chunk$set(echo = TRUE)
# necessary packages
library(robustbase)
library(knitr)
library(xtable)
library(Hmisc)
library(TOSTER)
library(stargazer)
library(summarytools)
library(magrittr)
library(kableExtra)
library(effects)
# load data
allpts <- read.table("Carmela_Project.csv", header = T, sep=";")
colnames(allpts)[1] <- "ID"
# load volumetric data
auto_pts <- read.table("ALLVOLS_automated_AK_20180605.csv", header=T, sep=";") # patients automatically delineated
manual_pts <- read.table("ALLVOLS_manual_AK_20180605.csv", header=T, sep=";") # patients manually delineated
# remove # of voxels, keep only volumes (in mm3)
auto_pts <- auto_pts[,c(1,3,5,7,9,11,13)]
manual_pts <- manual_pts[,c(1,3,5,7,9,11,13)]
# convert volumes to mL (cm3)
auto_pts[,-1] <- auto_pts[,-1]*0.001
manual_pts[,-1] <- manual_pts[,-1]*0.001
# combine manual and automated volumes
vols_all_pts <- rbind(auto_pts, manual_pts)
# exclude subject 86 (not in Kersten's main dataset)
vols_all_pts <- vols_all_pts[!vols_all_pts$ID=="86",]
# calculate HIR for days 1 and 2
vols_all_pts$HIR1 <- vols_all_pts$Tmax_D1_.8_volume/vols_all_pts$Tmax_D1_.2_volume
vols_all_pts$HIR2 <- vols_all_pts$Tmax_D2_.8_volume/vols_all_pts$Tmax_D2_.2_volume
# merge volumes and HIR with the rest of the data
allpts <- merge(allpts, vols_all_pts, by = "ID")
# rename Tmax volume variables to include threshold (>6s)
allpts$Tmax_D1_.6_volume <- allpts$Tmax_vol_d1
allpts$Tmax_D2_.6_volume <- allpts$Tmax_vol_d2
allpts$Tmax_vol_d1 <- c()
allpts$Tmax_vol_d2 <- c()
allpts$Tmax_change <- c()
allpts$relTmax_change <- c()
# create change variables for other thresholds (>4s)
allpts$Tmax_4_change <- allpts$Tmax_D2_.4_volume - allpts$Tmax_D1_.4_volume
allpts$relTmax_4_change <- (allpts$Tmax_4_change/allpts$Tmax_D1_.4_volume)*100
# create necessary variables (reperfusion / infarct growth binarized cut-offs)
allpts$reperf[allpts$relTmax_4_change<=-50] <- "Yes"
allpts$reperf[allpts$relTmax_4_change>-50] <- "No"
allpts$reperf <- factor(allpts$reperf)
allpts$infarct_growth[allpts$DWIgrowth>=7] <- "Yes"
allpts$infarct_growth[allpts$DWIgrowth<7] <- "No"
allpts$infarct_growth <- factor(allpts$infarct_growth)
# recode recanalization variable
allpts$Rekan[allpts$Rekan==0] <- "None" # no recanalization
allpts$Rekan[allpts$Rekan==1] <- "Full" # full recanalization
allpts$Rekan[allpts$Rekan==2] <- "Partial" # partial recanalization
allpts$Rekan <- factor(allpts$Rekan)
allpts$Rekan <- factor(allpts$Rekan,levels(allpts$Rekan)[c(2,3,1)])
# recode other categorical variables
allpts$sex[allpts$sex==1] <- "Male"
allpts$sex[allpts$sex==2] <- "Female"
allpts$sex <- factor(allpts$sex)
allpts$iv_tPR[allpts$iv_tPR==0] <- "No"
allpts$iv_tPR[allpts$iv_tPR==1] <- "Yes"
allpts$iv_tPR[allpts$iv_tPR==2] <- "Yes" # CHECK WITH KERSTEN IF THIS IS CORRECTLY CODED
allpts$iv_tPR <- factor(allpts$iv_tPR)
allpts$circulation[allpts$circulation==1] <- "Anterior"
allpts$circulation[allpts$circulation==2] <- "Posterior"
allpts$circulation <- factor(allpts$circulation)
# remove certain variables
allpts$no_recan_1 <- c()
allpts$VAR00002 <- c()
allpts$TSI_dich <- c()
# merge with variables defining occlusion location
occ_classfn <- read.table("occlusion_classfn.csv", header = T, sep=";")
allpts <- merge(allpts, occ_classfn, by = "ID")
# correctly code NaNs
allpts[allpts=="NaN"]<-NA
# Defines whether (T) or not (F) to show outliers in boxplots
OL = F
# choose non-recanalizers
nonrecan <- allpts[allpts$Rekan=="None",]
nonrecan_data <- data.frame(nonrecan$infarct_growth, nonrecan$reperf)
# barplot of reperfusion vs infarct growth
barplot(table(nonrecan_data),legend.text = c("No infarct growth", "Infarct growth"), col=c("#1b9e77","#d95f02"), xlab="Reperfusion", ylab="Number of patients", xpd=F,args.legend = list(x = "topright"), main="Non-recanalizers")
# crosstab of reperfusion vs infarct growth
kable(table(nonrecan_data)) %>%
kable_styling(full_width=F, position="center") %>%
add_header_above(c(" "=1, "Reperfusion"=2)) %>%
group_rows("Infarct growth",1,2)
# test for differences between reperfusion and infarct growth
print(chisq.test(table(nonrecan$reperf, nonrecan$infarct_growth)))
#################################
# choose recanalizers
recan <- allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]
recan_data <- data.frame(recan$infarct_growth, recan$reperf)
# barplot of reperfusion vs infarct growth
barplot(table(recan_data),legend.text = c("No infarct growth", "Infarct growth"), col=c("#1b9e77","#d95f02"), xlab="Reperfusion", ylab="Number of patients", xpd=F,args.legend = list(x = "topleft"), main="Recanalizers")
# crosstab of reperfusion vs infarct growth
kable(table(recan_data)) %>%
kable_styling(full_width=F, position="center") %>%
add_header_above(c(" "=1, "Reperfusion"=2)) %>%
group_rows("Infarct growth",1,2)
# test for differences between reperfusion and infarct growth
print(chisq.test(table(recan$reperf, recan$infarct_growth)))
test <- data.frame(recan$infarct_growth, recan$reperf, recan$OCC_LOC_1)
table(test)
barplot(table(test))
barplot(table(recan_data))
barplot(table(test))
str(test)
test <- data.frame(recan[recan$OCC_LOC_1=="PROXIMAL"]$infarct_growth, recan[recan$OCC_LOC_1=="PROXIMAL"]$reperf)
test <- data.frame(recan[recan$OCC_LOC_1=="PROXIMAL",]$infarct_growth, recan[recan$OCC_LOC_1=="PROXIMAL",]$reperf)
barplot(table(test))
test
barplot(table(test))
test <- data.frame(recan[recan$OCC_LOC_1=="DISTAL",]$infarct_growth, recan[recan$OCC_LOC_1=="DISTAL",]$reperf)
barplot(table(test))
mantelhaen.test()
recan_occ <- data.frame(recan$infarct_growth, recan$reperf, recan$OCC_LOC_1)
nonrecan_occ <- data.frame(nonrecan$infarct_growth, nonrecan$reperf, nonrecan$OCC_LOC_1)
mantelhaen.test(recan_occ)
mantelhaen.test(array(recan_occ))
recan_occ
str(recan_occ)
mantelhaen.test(table(recan_occ))
mantelhaen.test(table(nonrecan_occ))
lr_test <- data.frame(allpts$Rekan, allpts$infarct_growth, allpts$reperf, allpts$OCC_LOC_1)
lr_model_1 <- glm(infarct_growth~.,family = binomial(link="logit"), data=lr_test)
lr_model_1 <- glm(infarct_growth~.,family = binomial(link="logit"), data=lr_test)
lr_model_1 <- glm(allpts.infarct_growth~.,family = binomial(link="logit"), data=lr_test)
summary(lr_model_1)
plot(allEffects(model_9), multiline=T, ci.style="bars")
model_9 <- glm(infarct_growth~Rekan*reperf*OCC_LOC_1,family = binomial(link="logit"), data=allpts)
plot(allEffects(model_9), multiline=T, ci.style="bars")
dev.off()
plot(allEffects(model_9), multiline=T, ci.style="bars")
pwr.f2.test()
install.packages("pwr")
library(pwr)
pwr.f2.test(f2=0.35, sig.level = 0.05, power=80)
pwr.f2.test(u= 8, f2=0.35, sig.level = 0.05, power=80)
pwr.f2.test(u= 8, f2=0.35, sig.level = 0.05, power=0.8)
pwr.f2.test(u= 8, f2=0.8, sig.level = 0.05, power=0.8)
pwr.f2.test(u= 8, f2=0.1, sig.level = 0.05, power=0.8)
pwr.f2.test(u= 8, f2=0.1, sig.level = 0.05, power=0.8)
pwr.f2.test(u= 8, f2=0.05, sig.level = 0.05, power=0.8)
pwr.f2.test(u= 8, f2=0.1, sig.level = 0.05, power=0.8)
pwr.f2.test(u=10, f2=0.1, sig.level = 0.05, power=0.8)
pwr.f2.test(u=11, f2=0.1, sig.level = 0.05, power=0.8)
pwr.f2.test(u=11, f2=0.1, sig.level = 0.05, power=0.9)
pwr.f2.test(u= 8, f2=0.1, sig.level = 0.05, power=0.9)
