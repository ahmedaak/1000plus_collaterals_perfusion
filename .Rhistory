plot(allpts$HIR1,allpts$DWIgrowth, xlab="HIR", ylab="Absolute infarct growth (D1 - D2)")
boxplot(allpts$DWIgrowth~allpts$higashida_D1, ylab="Absolute infarct growth (D1 - D2)", xlab="Higashida score", xlim=c(0.5,5.5), outline=OL)
boxplot(allpts$infarct_growth_D5FLAIR~allpts$higashida_D1, ylab="Absolute infarct growth (D1 - D5)", xlab="Higashida score", xlim=c(0.5,5.5), outline=OL)
plot(allpts$HIR1,allpts$infarct_growth_D5FLAIR, xlab="HIR", ylab="Absolute infarct growth (D1 - D5)")
boxplot(infarct_growth_D5FLAIR~Rekan, data=allpts, ylab="Absolute infarct growth (D1 - D5)", outline=OL, xlab="Recanalization")
boxplot(allpts$infarct_growth_D5FLAIR~allpts$iv_tPR, ylab="Absolute infarct growth (D1 - D5)", xlab="IV thrombolysis", outline=OL)
plot(allpts$NIHSS_ad,allpts$infarct_growth_D5FLAIR, ylab="Absolute infarct growth (D1 - D5)", xlab="NIHSS on admission")
lines(allpts$higashida_D1, allpts$higashida_D2)
plot()
plot(allpts$higashida_D1, allpts$higashida_D2, type="l")
plot(allpts$higashida_D1, allpts$higashida_D2)
plot(allpts$higashida_D1~allpts$higashida_D2)
spineplot(allpts$higashida_D1, allpts$higashida_D2)
mosaicplot(allpts$higashida_D1, allpts$higashida_D2)
mosaicplot(allpts$higashida_D1, allpts$higashida_D2)
mosaicplot(complete.cases(allpts$higashida_D1), complete.cases(allpts$higashida_D2))
mosaicplot(complete.cases(allpts$higashida_D1), complete.cases(allpts$higashida_D2))
spineplot(allpts$higashida_D1, allpts$higashida_D2)
spineplot(complete.cases(allpts$higashida_D1), complete.cases(allpts$higashida_D2))
plot(allpts$higashida_D1, allpts$higashida_D2)
plot(allpts$higashida_D1, allpts$higashida_D2, type="p")
plot(allpts$higashida_D1, allpts$higashida_D2, type=".")
plot(allpts$higashida_D1, allpts$higashida_D2, type="l")
plot(allpts$higashida_D1, allpts$higashida_D2)
spineplot(allpts$higashida_D1, allpts$higashida_D2)
plot(allpts$higashida_D1)
summary.table(allpts_cont)
summary.table(table(allpts_cont))
allpts_cont
summary(allpts_cont)
describe(allpts_cont)
library(Hmisc)
describe(allpts_cont)
kable(describe(allpts_cont))
kable(allpts_cont)
library(kableExtra)
kable(allpts_cont)
kable(describe(allpts_cont))
summarize(allpts_cont)
summarize(allpts_cont, by = c("Age"))
install.packages("papeR")
library(papeR)
summarize(allpts_cont)
summarize(allpts)
summarize(allpts_cont)
summarize(allpts)
summarize(allpts, group = "Rekan")
summarize(allpts, group = "reperf")
kable(summarize(allpts_cont))
View(allpts)
allpts
which(colnames(allpts)=="vessel")
which(colnames(allpts)=="Tmax_D1_.2_volume")
which(colnames(allpts)=="HIR1")
boxplot(allpts$DWIgrowth~allpts$higashida_D2-allpts$higashida_D1, ylab="Absolute infarct growth (D1 - D2)", xlab="Higashida score D1", xlim=c(0.5,5.5), outline=OL)
boxplot(allpts$DWIgrowth~(allpts$higashida_D2-allpts$higashida_D1), ylab="Absolute infarct growth (D1 - D2)", xlab="Higashida score D1", xlim=c(0.5,5.5), outline=OL)
boxplot(allpts$DWIgrowth~allpts$higashida_change, ylab="Absolute infarct growth (D1 - D2)", xlab="Higashida score D1", xlim=c(0.5,5.5), outline=OL)
boxplot(allpts$DWIgrowth~allpts$higashida_change, ylab="Absolute infarct growth (D1 - D2)", xlab="Higashida score D1", outline=OL)
boxplot(allpts$infarct_growth_D5FLAIR~allpts$higashida_change, ylab="Absolute infarct growth (D1 - D2)", xlab="Higashida score D1", outline=OL)
aov(allpts$TSI~allpts$Rekan)
summary(aov(allpts$TSI~allpts$Rekan))
test <- summary(aov(allpts$TSI~allpts$Rekan))
test
test$Pr(>F)
boxplot(allpts$TSI~allpts$Rekan)
View(allpts)
lmrob(mRS_d90~Rekan*Tmax_6_reperf_rel, data=allpts, setting="KS2014")
library(robust)
lmrob(mRS_d90~Rekan*Tmax_6_reperf_rel, data=allpts, setting="KS2014")
library(robustbase)
lmrob(mRS_d90~Rekan*Tmax_6_reperf_rel, data=allpts, setting="KS2014")
plot(allEffects(model_A), multiline=T, ci.style="bars")
knitr::opts_chunk$set(echo = TRUE)
# necessary packages
library(robustbase)
library(knitr)
library(xtable)
library(Hmisc)
library(TOSTER)
library(stargazer)
library(summarytools)
library(magrittr)
library(kableExtra)
library(effects)
library(pwr)
library(papeR)
library(robust)
# DEFINE WHETHER YOU WANT EFFECTS PLOTS FOR MIXED MODELS
effplot = "Y"
# Define whether (T) or not (F) to show outliers in boxplots
OL = F
#if (file.exists("allpts.Rdata")){
#("allpts.Rdata")
#} else {
# load data
allpts <- read.table("all_data_v3.csv", header = T, sep=";")
colnames(allpts)[1] <- "ID"
# load volumetric data
auto_pts <- read.table("ALLVOLS_automated_AK_20180605.csv", header=T, sep=";") # patients automatically delineated
manual_pts <- read.table("ALLVOLS_manual_AK_20180605.csv", header=T, sep=";") # patients manually delineated
# remove # of voxels, keep only volumes (in mm3)
auto_pts <- auto_pts[,c(1,3,5,7,9,11,13)]
manual_pts <- manual_pts[,c(1,3,5,7,9,11,13)]
# convert volumes to mL (cm3)
auto_pts[,-1] <- auto_pts[,-1]*0.001
manual_pts[,-1] <- manual_pts[,-1]*0.001
# combine manual and automated volumes
vols_all_pts <- rbind(auto_pts, manual_pts)
# exclude subject 86 (not in Kersten's main dataset)
vols_all_pts <- vols_all_pts[!vols_all_pts$ID=="86",]
# calculate HIR for days 1 and 2
vols_all_pts$HIR1 <- vols_all_pts$Tmax_D1_.8_volume/vols_all_pts$Tmax_D1_.2_volume
vols_all_pts$HIR2 <- vols_all_pts$Tmax_D2_.8_volume/vols_all_pts$Tmax_D2_.2_volume
# merge volumes and HIR with the rest of the data
allpts <- merge(allpts, vols_all_pts, by = "ID")
# rename Tmax volume variables to include threshold (>6s)
allpts$Tmax_D1_.6_volume <- allpts$Tmax_vol_d1
allpts$Tmax_D2_.6_volume <- allpts$Tmax_vol_d2
# create reperfusion variables
allpts$Tmax_6_reperf_abs <- allpts$Tmax_D1_.6_volume - allpts$Tmax_D2_.6_volume
allpts$Tmax_6_reperf_rel <- (allpts$Tmax_6_reperf_abs/allpts$Tmax_D1_.6_volume)*100
# replace infinity values (divide by zero where D1 Tmax volume = 0) with NA
is.na(allpts$Tmax_6_reperf_rel)<-sapply(allpts$Tmax_6_reperf_rel, is.infinite)
# recode recanalization variable
allpts$Rekan[allpts$Rekan==0] <- "None" # no recanalization
allpts$Rekan[allpts$Rekan==1] <- "Full" # full recanalization
allpts$Rekan[allpts$Rekan==2] <- "Partial" # partial recanalization
allpts$Rekan <- factor(allpts$Rekan)
allpts$Rekan <- factor(allpts$Rekan,levels(allpts$Rekan)[c(2,3,1)])
# recode other categorical variables
allpts$sex[allpts$sex==1] <- "Male"
allpts$sex[allpts$sex==2] <- "Female"
allpts$sex <- factor(allpts$sex)
allpts$iv_tPR[allpts$iv_tPR==0] <- "No"
allpts$iv_tPR[allpts$iv_tPR==1] <- "Yes"
allpts$iv_tPR[allpts$iv_tPR==2] <- "Yes"
allpts$iv_tPR <- factor(allpts$iv_tPR)
allpts$circulation[allpts$circulation==1] <- "Anterior"
allpts$circulation[allpts$circulation==2] <- "Posterior"
allpts$circulation <- factor(allpts$circulation)
allpts$higashida_change <- allpts$higashida_D2-allpts$higashida_D1
allpts$higashida_D1 <- factor(allpts$higashida_D1)
allpts$higashida_D2 <- factor(allpts$higashida_D2)
allpts$higashida_change <- factor(allpts$higashida_change)
# remove certain variables
allpts$no_recan_1 <- c()
allpts$VAR00002 <- c()
allpts$TSI_dich <- c()
# merge with variables defining occlusion location
occ_classfn <- read.table("occlusion_classfn.csv", header = T, sep=";")
allpts <- merge(allpts, occ_classfn, by = "ID")
# correctly code NaNs
allpts[allpts=="NaN"]<-NA
# save data
save(allpts, file = "allpts.Rdata")
#}
model_A <- lmrob(Tmax_6_reperf_rel~NIHSS_ad + iv_tPR, data=allpts, setting = "KS2014")
boxplot(allpts$Tmax_6_reperf_rel~allpts$iv_tPR, ylab="Extent of reperfusion", xlab="IV thrombolysis", outline=OL)
plot(allpts$NIHSS_ad,allpts$Tmax_6_reperf_rel, ylab="Extent of reperfusion", xlab="NIHSS on admission")
model_B <- lmrob(Tmax_6_reperf_rel~NIHSS_ad + iv_tPR + Rekan, data=allpts, setting = "KS2014")
boxplot(Tmax_6_reperf_rel~Rekan, data=allpts, ylab="Extent of reperfusion", outline=OL, xlab="Recanalization")
model_C <- lmrob(Tmax_6_reperf_rel~NIHSS_ad + iv_tPR + HIR1 + Rekan, data=allpts, setting = "KS2014")
plot(allpts$HIR1,allpts$Tmax_6_reperf_rel, xlab="HIR", ylab="Extent of reperfusion")
model_D <- lmrob(Tmax_6_reperf_rel~NIHSS_ad + iv_tPR + higashida_D1_bin + Rekan, data=allpts, setting = "KS2014")
boxplot(allpts$Tmax_6_reperf_rel~allpts$higashida_D1_bin, ylab="Extent of reperfusion", xlab="Higashida score D1", xlim=c(0.5,2.5), outline=OL)
if (effplot == "Y") {
plot(allEffects(model_A), multiline=T, ci.style="bars")
plot(allEffects(model_B), multiline=T, ci.style="bars")
plot(allEffects(model_C), multiline=T, ci.style="bars")
plot(allEffects(model_D), multiline=T, ci.style="bars")
}
stargazer(model_A, model_B, model_C, model_D, type="html", align = F, style="all", single.row=T)
stargazer(anova(model_A,model_B), type="html", align = F, style="all", single.row=T, title = "1 vs 2")
stargazer(anova(model_A,model_C), type="html", align = F, style="all", single.row=T, title = "1 vs 3")
stargazer(anova(model_A,model_D), type="html", align = F, style="all", single.row=T, title = "1 vs 4")
allpts_nonrekan <- allpts[which(allpts$Rekan=="None"),]
model_A <- lmrob(Tmax_6_reperf_rel~NIHSS_ad + iv_tPR, data=allpts_nonrekan, setting = "KS2014")
boxplot(allpts_nonrekan$Tmax_6_reperf_rel~allpts_nonrekan$iv_tPR, ylab="Extent of reperfusion", xlab="IV thrombolysis", outline=OL)
plot(allpts_nonrekan$NIHSS_ad,allpts_nonrekan$Tmax_6_reperf_rel, ylab="Extent of reperfusion", xlab="NIHSS on admission")
model_B <- lmrob(Tmax_6_reperf_rel~NIHSS_ad + iv_tPR + HIR1, data=allpts_nonrekan, setting = "KS2014")
plot(allpts_nonrekan$HIR1,allpts_nonrekan$Tmax_6_reperf_rel, xlab="HIR", ylab="Extent of reperfusion")
model_C <- lmrob(Tmax_6_reperf_rel~NIHSS_ad + iv_tPR + higashida_D1_bin, data=allpts_nonrekan, setting = "KS2014")
boxplot(allpts_nonrekan$Tmax_6_reperf_rel~allpts_nonrekan$higashida_D1_bin, ylab="Extent of reperfusion", xlab="Higashida score D1", xlim=c(0.5,2.5), outline=OL)
if (effplot == "Y") {
plot(allEffects(model_A), multiline=T, ci.style="bars")
plot(allEffects(model_B), multiline=T, ci.style="bars")
plot(allEffects(model_C), multiline=T, ci.style="bars")
}
stargazer(model_A, model_B, model_C, type="html", align = F, style="all", single.row=T)
stargazer(anova(model_A,model_B), type="html", align = F, style="all", single.row=T, title = "1 vs 2")
stargazer(anova(model_A,model_C), type="html", align = F, style="all", single.row=T, title = "1 vs 3")
allpts_rekan <- allpts[which(allpts$Rekan=="Full" | allpts$Rekan=="Partial"),]
model_A <- lmrob(Tmax_6_reperf_rel~NIHSS_ad + iv_tPR, data=allpts_rekan, setting = "KS2014")
boxplot(allpts_rekan$Tmax_6_reperf_rel~allpts_rekan$iv_tPR, ylab="Extent of reperfusion", xlab="IV thrombolysis", outline=OL)
plot(allpts_rekan$NIHSS_ad,allpts_rekan$Tmax_6_reperf_rel, ylab="Extent of reperfusion", xlab="NIHSS on admission")
model_B <- lmrob(Tmax_6_reperf_rel~NIHSS_ad + iv_tPR + HIR1, data=allpts_rekan, setting = "KS2014")
plot(allpts_rekan$HIR1,allpts_rekan$Tmax_6_reperf_rel, xlab="HIR", ylab="Extent of reperfusion")
model_C <- lmrob(Tmax_6_reperf_rel~NIHSS_ad + iv_tPR + higashida_D1_bin, data=allpts_rekan, setting = "KS2014")
boxplot(allpts_rekan$Tmax_6_reperf_rel~allpts_rekan$higashida_D1_bin, ylab="Extent of reperfusion", xlab="Higashida score D1", xlim=c(0.5,2.5), outline=OL)
if (effplot == "Y") {
plot(allEffects(model_A), multiline=T, ci.style="bars")
plot(allEffects(model_B), multiline=T, ci.style="bars")
plot(allEffects(model_C), multiline=T, ci.style="bars")
}
stargazer(model_A, model_B, model_C, type="html", align = F, style="all", single.row=T)
stargazer(anova(model_A,model_B), type="html", align = F, style="all", single.row=T, title = "1 vs 2")
stargazer(anova(model_A,model_C), type="html", align = F, style="all", single.row=T, title = "1 vs 3")
model_A <- lmrob(mRS_d90~HIR1, data=allpts, setting = "KS2014")
boxplot(allpts$mRS_d90~allpts$iv_tPR, ylab="mRS (day 90)", xlab="IV thrombolysis")
boxplot(allpts$NIHSS_ad~allpts$mRS_d90, xlab="mRS (day 90)", ylab="NIHSS on admission")
model_B <- lmrob(mRS_d90~HIR1 + NIHSS_ad + iv_tPR + Rekan + Tmax_6_reperf_rel, data=allpts, setting = "KS2014")
boxplot(mRS_d90~Rekan, data=allpts, col=c("#1b9e77","#1b9e77","#1b9e77","#d95f02","#d95f02","#d95f02"), ylab="mRS day 90", outline=OL, xaxt="n", xlab="Recanalization")
axis(side=1, at=c(1,2,3,4,5,6), labels=c("Full","Partial","None","Full","Partial","None"))
legend("topright", legend = c("Non-reperfused","Reperfused"), fill=c("#1b9e77","#d95f02"))
model_C <- lmrob(mRS_d90~higashida_D1_bin, data=allpts, setting = "KS2014")
boxplot(allpts$HIR1~allpts$mRS_d90, xlab="mRS (day 90)", ylab="HIR")
model_D <- lmrob(mRS_d90~higashida_D1_bin + NIHSS_ad + iv_tPR  + Tmax_6_reperf_rel + Rekan, data=allpts, setting = "KS2014")
boxplot(allpts$mRS_d90~allpts$higashida_D1_bin, ylab="mRS (day 90)", xlab="Higashida score D1", xlim=c(0.5,2.5), outline=OL)
model_E <- lmrob(mRS_d90~Rekan*Tmax_6_reperf_rel, data=allpts, setting = "KS2014")
model_F <- lmrob(mRS_d90~Rekan*Tmax_6_reperf_rel + NIHSS_ad + iv_tPR, data=allpts, setting = "KS2014")
if (effplot == "Y") {
plot(allEffects(model_A), multiline=T, ci.style="bars")
plot(allEffects(model_B), multiline=T, ci.style="bars")
plot(allEffects(model_C), multiline=T, ci.style="bars")
plot(allEffects(model_D), multiline=T, ci.style="bars")
plot(allEffects(model_E), multiline=T, ci.style="bars")
plot(allEffects(model_F), multiline=T, ci.style="bars")
}
stargazer(model_A, model_B, model_C, model_D, model_E, model_F, type="html", align = F, style="all", single.row=T)
stargazer(anova(model_A,model_B), type="html", align = F, style="all", single.row=T, title = "1 vs 2")
stargazer(anova(model_C,model_D), type="html", align = F, style="all", single.row=T, title = "1 vs 3")
stargazer(anova(model_E,model_F), type="html", align = F, style="all", single.row=T, title = "1 vs 4")
model_A <- lmrob(DWIgrowth~HIR1, data=allpts, setting = "KS2014")
boxplot(allpts$DWIgrowth~allpts$iv_tPR, ylab="Absolute infarct growth (D1 - D2)", xlab="IV thrombolysis", outline=OL)
plot(allpts$NIHSS_ad,allpts$DWIgrowth, ylab="Absolute infarct growth (D1 - D2)", xlab="NIHSS on admission")
model_B <- lmrob(DWIgrowth~HIR1 + NIHSS_ad + iv_tPR + Tmax_6_reperf_rel + Rekan, data=allpts, setting = "KS2014")
boxplot(DWIgrowth~Rekan, data=allpts, ylab="Absolute infarct growth (D1 - D2)", outline=OL, xlab="Recanalization")
model_C <- lmrob(DWIgrowth~higashida_D1_bin, data=allpts, setting = "KS2014")
plot(allpts$HIR1,allpts$DWIgrowth, xlab="HIR", ylab="Absolute infarct growth (D1 - D2)")
model_D <- lmrob(DWIgrowth~higashida_D1_bin + NIHSS_ad + iv_tPR + Rekan + Tmax_6_reperf_rel, data=allpts, setting = "KS2014")
boxplot(allpts$DWIgrowth~allpts$higashida_D1_bin, ylab="Absolute infarct growth (D1 - D2)", xlab="Higashida score D1", xlim=c(0.5,2.5), outline=OL)
model_E <- lmrob(DWIgrowth~Rekan*Tmax_6_reperf_rel, data=allpts, setting = "KS2014")
model_F <- lmrob(DWIgrowth~Rekan*Tmax_6_reperf_rel + NIHSS_ad + iv_tPR, data=allpts, setting = "KS2014")
if (effplot == "Y") {
plot(allEffects(model_A), multiline=T, ci.style="bars")
plot(allEffects(model_B), multiline=T, ci.style="bars")
plot(allEffects(model_C), multiline=T, ci.style="bars")
plot(allEffects(model_D), multiline=T, ci.style="bars")
plot(allEffects(model_E), multiline=T, ci.style="bars")
plot(allEffects(model_F), multiline=T, ci.style="bars")
}
stargazer(model_A, model_B, model_C, model_D, model_E, model_F, type="html", align = F, style="all", single.row=T)
stargazer(anova(model_A,model_B), type="html", align = F, style="all", single.row=T, title = "1 vs 2")
stargazer(anova(model_C,model_D), type="html", align = F, style="all", single.row=T, title = "1 vs 3")
stargazer(anova(model_E,model_F), type="html", align = F, style="all", single.row=T, title = "1 vs 4")
model_A <- lmrob(infarct_growth_D5FLAIR~HIR1, data=allpts, setting="KS2014")
boxplot(allpts$infarct_growth_D5FLAIR~allpts$iv_tPR, ylab="Absolute infarct growth (D1 - D5)", xlab="IV thrombolysis", outline=OL)
plot(allpts$NIHSS_ad,allpts$infarct_growth_D5FLAIR, ylab="Absolute infarct growth (D1 - D5)", xlab="NIHSS on admission")
model_B <- lmrob(infarct_growth_D5FLAIR~HIR1 + NIHSS_ad + iv_tPR + Rekan + Tmax_6_reperf_rel, data=allpts, setting="KS2014")
boxplot(infarct_growth_D5FLAIR~Rekan, data=allpts, ylab="Absolute infarct growth (D1 - D5)", outline=OL, xlab="Recanalization")
model_C <- lmrob(infarct_growth_D5FLAIR~higashida_D1_bin, data=allpts, setting="KS2014")
plot(allpts$HIR1,allpts$infarct_growth_D5FLAIR, xlab="HIR", ylab="Absolute infarct growth (D1 - D5)")
model_D <- lmrob(infarct_growth_D5FLAIR~higashida_D1_bin + NIHSS_ad + iv_tPR  + Rekan + Tmax_6_reperf_rel, data=allpts, setting="KS2014")
boxplot(allpts$infarct_growth_D5FLAIR~allpts$higashida_D1_bin, ylab="Absolute infarct growth (D1 - D5)", xlab="Higashida score D1", xlim=c(0.5,2.5), outline=OL)
model_E <- lmrob(infarct_growth_D5FLAIR~Rekan*Tmax_6_reperf_rel, data=allpts, setting = "KS2014")
model_F <- lmrob(infarct_growth_D5FLAIR~Rekan*Tmax_6_reperf_rel + NIHSS_ad + iv_tPR, data=allpts, setting = "KS2014")
if (effplot == "Y") {
plot(allEffects(model_A), multiline=T, ci.style="bars")
plot(allEffects(model_B), multiline=T, ci.style="bars")
plot(allEffects(model_C), multiline=T, ci.style="bars")
plot(allEffects(model_D), multiline=T, ci.style="bars")
plot(allEffects(model_E), multiline=T, ci.style="bars")
plot(allEffects(model_F), multiline=T, ci.style="bars")
}
stargazer(model_A, model_B, model_C, model_D, model_E, model_F, type="html", align = F, style="all", single.row=T)
stargazer(anova(model_A,model_B), type="html", align = F, style="all", single.row=T, title = "1 vs 2")
stargazer(anova(model_C,model_D), type="html", align = F, style="all", single.row=T, title = "1 vs 3")
stargazer(anova(model_E,model_F), type="html", align = F, style="all", single.row=T, title = "1 vs 4")
model_A <- glmrob(higashida_D1_bin~NIHSS_ad + age + sex + TSI + DWIvol_d1 + circulation, data=allpts, family = "binomial")
if (effplot == "Y") {
plot(allEffects(model_A), multiline=T, ci.style="bars")
}
model_A <- glmrob(HIR1~NIHSS_ad + age + sex + TSI + DWIvol_d1 + circulation, data=allpts, family = "binomial")
if (effplot == "Y") {
plot(allEffects(model_A), multiline=T, ci.style="bars")
}
stargazer(model_A, type="html", align = F, style="all", single.row=T)
pwrtest
pwrtest$v + pwrtest$u
pwrtest$v + pwrtest$u + 1
?round
round(pwrtest$v + pwrtest$u + 1)
?summarize
?summarize
summarize(allpts)
summarize(allpts, type="factor")
kable(summarize(allpts, type="factor", variables=c("higashida_D1", "higashida_D2", "Rekan", "circulation", "sex", "iv_tPR")))
allpts[which(allpts$Rekan==allpts$Rekan=="Full"),]
allpts[which(allpts$Rekan=allpts$Rekan=="Full"),]
allpts[which(allpts$Rekan=="Full"),]
nrows(allpts[which(allpts$Rekan=="Full"),])
nrow(allpts[which(allpts$Rekan=="Full"),])
allpts$circulation
knitr::opts_chunk$set(echo = TRUE)
# necessary packages
library(robustbase)
library(knitr)
library(xtable)
library(Hmisc)
library(TOSTER)
library(stargazer)
library(summarytools)
library(magrittr)
library(kableExtra)
library(effects)
library(pwr)
library(papeR)
library(robust)
library(reshape2)
# DEFINE WHETHER YOU WANT EFFECTS PLOTS FOR MIXED MODELS
effplot = "N"
# Define whether (T) or not (F) to show outliers in boxplots
OL = F
#if (file.exists("allpts.Rdata")){
#("allpts.Rdata")
#} else {
# load data
allpts <- read.table("all_data_v3.csv", header = T, sep=";")
colnames(allpts)[1] <- "ID"
# load volumetric data
auto_pts <- read.table("ALLVOLS_automated_AK_20180605.csv", header=T, sep=";") # patients automatically delineated
manual_pts <- read.table("ALLVOLS_manual_AK_20180605.csv", header=T, sep=";") # patients manually delineated
# remove # of voxels, keep only volumes (in mm3)
auto_pts <- auto_pts[,c(1,3,5,7,9,11,13)]
manual_pts <- manual_pts[,c(1,3,5,7,9,11,13)]
# convert volumes to mL (cm3)
auto_pts[,-1] <- auto_pts[,-1]*0.001
manual_pts[,-1] <- manual_pts[,-1]*0.001
# combine manual and automated volumes
vols_all_pts <- rbind(auto_pts, manual_pts)
# exclude subject 86 (not in Kersten's main dataset)
vols_all_pts <- vols_all_pts[!vols_all_pts$ID=="86",]
# calculate HIR for days 1 and 2
vols_all_pts$HIR1 <- vols_all_pts$Tmax_D1_.8_volume/vols_all_pts$Tmax_D1_.2_volume
vols_all_pts$HIR2 <- vols_all_pts$Tmax_D2_.8_volume/vols_all_pts$Tmax_D2_.2_volume
# merge volumes and HIR with the rest of the data
allpts <- merge(allpts, vols_all_pts, by = "ID")
# rename Tmax volume variables to include threshold (>6s)
allpts$Tmax_D1_.6_volume <- allpts$Tmax_vol_d1
allpts$Tmax_D2_.6_volume <- allpts$Tmax_vol_d2
# create reperfusion variables
allpts$Tmax_6_reperf_abs <- allpts$Tmax_D1_.6_volume - allpts$Tmax_D2_.6_volume
allpts$Tmax_6_reperf_rel <- (allpts$Tmax_6_reperf_abs/allpts$Tmax_D1_.6_volume)*100
# replace infinity values (divide by zero where D1 Tmax volume = 0) with NA
is.na(allpts$Tmax_6_reperf_rel)<-sapply(allpts$Tmax_6_reperf_rel, is.infinite)
# recode recanalization variable
allpts$Rekan[allpts$Rekan==0] <- "None" # no recanalization
allpts$Rekan[allpts$Rekan==1] <- "Full" # full recanalization
allpts$Rekan[allpts$Rekan==2] <- "Partial" # partial recanalization
allpts$Rekan <- factor(allpts$Rekan)
allpts$Rekan <- factor(allpts$Rekan,levels(allpts$Rekan)[c(2,3,1)])
# recode other categorical variables
allpts$sex[allpts$sex==1] <- "Male"
allpts$sex[allpts$sex==2] <- "Female"
allpts$sex <- factor(allpts$sex)
allpts$iv_tPR[allpts$iv_tPR==0] <- "No"
allpts$iv_tPR[allpts$iv_tPR==1] <- "Yes"
allpts$iv_tPR[allpts$iv_tPR==2] <- "Yes"
allpts$iv_tPR <- factor(allpts$iv_tPR)
allpts$circulation[allpts$circulation==1] <- "Anterior"
allpts$circulation[allpts$circulation==2] <- "Posterior"
allpts$circulation <- factor(allpts$circulation)
allpts$higashida_change <- allpts$higashida_D2-allpts$higashida_D1
allpts$higashida_D1 <- factor(allpts$higashida_D1)
allpts$higashida_D2 <- factor(allpts$higashida_D2)
allpts$higashida_change <- factor(allpts$higashida_change)
# remove certain variables
allpts$no_recan_1 <- c()
allpts$VAR00002 <- c()
allpts$TSI_dich <- c()
# merge with variables defining occlusion location
occ_classfn <- read.table("occlusion_classfn.csv", header = T, sep=";")
allpts <- merge(allpts, occ_classfn, by = "ID")
# correctly code NaNs
allpts[allpts=="NaN"]<-NA
# save data
save(allpts, file = "allpts.Rdata")
#}
# descriptive stats
kable(summarize(allpts, type="numeric"))
summarize(allpts, type="factor", variables=c("higashida_D1", "higashida_D2", "Rekan", "circulation", "sex", "iv_tPR"))
# visualize changes in Higashida over time
# create Higashida data frame
higa_mat <- cbind(allpts$higashida_D1, allpts$higashida_D2)
# sort Higashida data frame based on D1
higa_mat_sort <- higa_mat[order(higa_mat[,1]),]
# make Higashida data frame long
higa_long <- melt(higa_mat_sort)
# give meaningful names to columns
colnames(higa_long) <- c("Subject","Day","Higashida")
higa_long$Higashida <- factor(higa_long$Higashida)
# plot as heat map (i.e. Lasagne plot)
ggplot(higa_long, aes(x=Day, y=Subject, fill=Higashida)) + geom_tile(colour="black") + scale_x_discrete(limits=c(1,2)) + scale_fill_manual(values=c("#d7191c", "#fdae61", "#ffffbf", "#abd9e9", "#2c7bb6", "#000000"),name="Higashida score", labels = c("0","1","2","3","4","NA"))
anova(model_D)
anova(model_D, model_C)
Anova(model_D)
model_D <- lmrob(Tmax_6_reperf_rel~NIHSS_ad + iv_tPR + Rekan*higashida_D1_bin + circulation, data=allpts, setting = "KS2014")
Anova(model_D)
Anova(model_D)
plot(allEffects(model_B), multiline=T, ci.style="bars", selection=4)
plot(allEffects(model_D), multiline=T, ci.style="bars", selection=4)
plot(allEffects(model_F), multiline=T, ci.style="bars", selection=4)
model_Z <- glmrob(higashida_D1_bin~Rekan*Tmax_6_reperf_rel, data=allpts, family = "binomial")
library(robust)
library(effects)
model_Z <- glmrob(higashida_D1_bin~Rekan*Tmax_6_reperf_rel, data=allpts, family = "binomial")
library(robustbase)
model_Z <- glmrob(higashida_D1_bin~Rekan*Tmax_6_reperf_rel, data=allpts, family = "binomial")
summary(model_Z)
plot(effect(mod=model_Z, term = "Rekan*Tmax_6_reperf_rel"))
plot(effect(mod=model_Z, term = "Rekan*Tmax_6_reperf_rel"), multiline=T, ci.style="bars")
summary(model_Z)
knitr::opts_chunk$set(echo = TRUE)
# necessary packages
library(robustbase)
library(knitr)
library(xtable)
library(Hmisc)
library(TOSTER)
library(stargazer)
library(summarytools)
library(magrittr)
library(kableExtra)
library(effects)
library(pwr)
library(papeR)
library(robust)
library(reshape2)
# DEFINE WHETHER YOU WANT EFFECTS PLOTS FOR MIXED MODELS
effplot = "Y"
# Define whether (T) or not (F) to show outliers in boxplots
OL = F
#if (file.exists("allpts.Rdata")){
#("allpts.Rdata")
#} else {
# load data
allpts <- read.table("all_data_v3.csv", header = T, sep=";")
colnames(allpts)[1] <- "ID"
# load volumetric data
auto_pts <- read.table("ALLVOLS_automated_AK_20180605.csv", header=T, sep=";") # patients automatically delineated
manual_pts <- read.table("ALLVOLS_manual_AK_20180605.csv", header=T, sep=";") # patients manually delineated
# remove # of voxels, keep only volumes (in mm3)
auto_pts <- auto_pts[,c(1,3,5,7,9,11,13)]
manual_pts <- manual_pts[,c(1,3,5,7,9,11,13)]
# convert volumes to mL (cm3)
auto_pts[,-1] <- auto_pts[,-1]*0.001
manual_pts[,-1] <- manual_pts[,-1]*0.001
# combine manual and automated volumes
vols_all_pts <- rbind(auto_pts, manual_pts)
# exclude subject 86 (not in Kersten's main dataset)
vols_all_pts <- vols_all_pts[!vols_all_pts$ID=="86",]
# calculate HIR for days 1 and 2
vols_all_pts$HIR1 <- vols_all_pts$Tmax_D1_.8_volume/vols_all_pts$Tmax_D1_.2_volume
vols_all_pts$HIR2 <- vols_all_pts$Tmax_D2_.8_volume/vols_all_pts$Tmax_D2_.2_volume
# merge volumes and HIR with the rest of the data
allpts <- merge(allpts, vols_all_pts, by = "ID")
# rename Tmax volume variables to include threshold (>6s)
allpts$Tmax_D1_.6_volume <- allpts$Tmax_vol_d1
allpts$Tmax_D2_.6_volume <- allpts$Tmax_vol_d2
# create reperfusion variables
allpts$Tmax_6_reperf_abs <- allpts$Tmax_D1_.6_volume - allpts$Tmax_D2_.6_volume
allpts$Tmax_6_reperf_rel <- (allpts$Tmax_6_reperf_abs/allpts$Tmax_D1_.6_volume)*100
# replace infinity values (divide by zero where D1 Tmax volume = 0) with NA
is.na(allpts$Tmax_6_reperf_rel)<-sapply(allpts$Tmax_6_reperf_rel, is.infinite)
# recode recanalization variable
allpts$Rekan[allpts$Rekan==0] <- "None" # no recanalization
allpts$Rekan[allpts$Rekan==1] <- "Full" # full recanalization
allpts$Rekan[allpts$Rekan==2] <- "Partial" # partial recanalization
allpts$Rekan <- factor(allpts$Rekan)
allpts$Rekan <- factor(allpts$Rekan,levels(allpts$Rekan)[c(2,3,1)])
# recode other categorical variables
allpts$sex[allpts$sex==1] <- "Male"
allpts$sex[allpts$sex==2] <- "Female"
allpts$sex <- factor(allpts$sex)
allpts$iv_tPR[allpts$iv_tPR==0] <- "No"
allpts$iv_tPR[allpts$iv_tPR==1] <- "Yes"
allpts$iv_tPR[allpts$iv_tPR==2] <- "Yes"
allpts$iv_tPR <- factor(allpts$iv_tPR)
allpts$circulation[allpts$circulation==1] <- "Anterior"
allpts$circulation[allpts$circulation==2] <- "Posterior"
allpts$circulation <- factor(allpts$circulation)
allpts$higashida_change <- allpts$higashida_D2-allpts$higashida_D1
allpts$higashida_D1 <- factor(allpts$higashida_D1)
allpts$higashida_D2 <- factor(allpts$higashida_D2)
allpts$higashida_change <- factor(allpts$higashida_change)
# remove certain variables
allpts$no_recan_1 <- c()
allpts$VAR00002 <- c()
allpts$TSI_dich <- c()
# merge with variables defining occlusion location
occ_classfn <- read.table("occlusion_classfn.csv", header = T, sep=";")
allpts <- merge(allpts, occ_classfn, by = "ID")
# correctly code NaNs
allpts[allpts=="NaN"]<-NA
# save data
save(allpts, file = "allpts.Rdata")
#}
model_X <- lmrob(mRS_d90~Tmax_6_reperf_rel, data = allpts, setting="KS2014")
summary(model_X)
plot(allpts$mRS_d90, allpts$Tmax_6_reperf_rel)
hist(allpts$Tmax_6_reperf_rel)
hist(abs(allpts$Tmax_6_reperf_rel))
