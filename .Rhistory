assign(nam_melt,get_nam_melt)
}
}
#rbind two melted dataframes of different sessions based on them being mean or max values
melt_segm_mean_ses12<- rbind(melt_segm_mean_ses1, melt_segm_mean_ses2)
melt_segm_max_ses12<- rbind(melt_segm_max_ses1, melt_segm_max_ses2)
# make the dataframe for glmer with volumetry
#first multiply the melted dataframes by there as you have three thresholds at volume data giving different outputs for each threshold
melt_max_ses12_expanded<- melt_segm_max_ses12[rep(1:nrow(melt_segm_max_ses12),each=3), 1:3]
melt_mean_ses12_expanded<- melt_segm_mean_ses12[rep(1:nrow(melt_segm_mean_ses12),each=3), 1:3]
#make the segments vector as character so that after cbinding this does not return numbers instead of strings
melt_max_ses12_expanded$segments<-as.character(melt_max_ses12_expanded$segments)
#make the dataframe consisting of vectors either from volumes_output or expended melt dataframes
lmer.df<-data.frame(volumes_output$Subject, melt_max_ses12_expanded$segments, volumes_output$Day,melt_mean_ses12_expanded$value, melt_max_ses12_expanded$value, volumes_output$thr,   volumes_output$Volume, stringsAsFactors = FALSE)
rnorm(40)
normrnd(40)
rnd_seq1 <- runif(50,0,1000)
rnd_seq2 <- runif(50,0,1000)
corr(rnd_seq1, rnd_seq2)
cor(rnd_seq1, rnd_seq2)
cor.coef(rnd_seq1, rnd_seq2)
cor.test(rnd_seq1, rnd_seq2)
cor.test(1/rnd_seq1, rnd_seq2)
plot(1/rnd_seq1, rnd_seq2)
plot(rnd_seq1, rnd_seq2)
plot(1/rnd_seq1, rnd_seq2)
plot(rnd_seq1, rnd_seq2)
plot(rnd_seq1, 1/rnd_seq1)
cor.test(rnd_seq1, 1/rnd_seq1)
cor.test(rnd_seq2, 1/rnd_seq1)
cor.test(rnd_seq2, rnd_seq1)
rnd_seq2 <- runif(11,0,1000)
rnd_seq1 <- runif(11,0,1000)
plot(rnd_seq1, 1/rnd_seq1)
cor.test(rnd_seq2, rnd_seq1)
cor.test(rnd_seq2, 1/rnd_seq1)
1/rnd_seq1
1/88
knitr::opts_chunk$set(echo = TRUE)
# necessary packages
library(robustbase)
library(knitr)
library(xtable)
library(Hmisc)
library(TOSTER)
library(stargazer)
library(summarytools)
library(magrittr)
library(kableExtra)
library(effects)
library(pwr)
# load data
allpts <- read.table("all_data_v3.csv", header = T, sep=",")
colnames(allpts)[1] <- "ID"
# load volumetric data
auto_pts <- read.table("ALLVOLS_automated_AK_20180605.csv", header=T, sep=";") # patients automatically delineated
manual_pts <- read.table("ALLVOLS_manual_AK_20180605.csv", header=T, sep=";") # patients manually delineated
# remove # of voxels, keep only volumes (in mm3)
auto_pts <- auto_pts[,c(1,3,5,7,9,11,13)]
manual_pts <- manual_pts[,c(1,3,5,7,9,11,13)]
# convert volumes to mL (cm3)
auto_pts[,-1] <- auto_pts[,-1]*0.001
manual_pts[,-1] <- manual_pts[,-1]*0.001
# combine manual and automated volumes
vols_all_pts <- rbind(auto_pts, manual_pts)
# exclude subject 86 (not in Kersten's main dataset)
vols_all_pts <- vols_all_pts[!vols_all_pts$ID=="86",]
# calculate HIR for days 1 and 2
vols_all_pts$HIR1 <- vols_all_pts$Tmax_D1_.8_volume/vols_all_pts$Tmax_D1_.2_volume
vols_all_pts$HIR2 <- vols_all_pts$Tmax_D2_.8_volume/vols_all_pts$Tmax_D2_.2_volume
# merge volumes and HIR with the rest of the data
allpts <- merge(allpts, vols_all_pts, by = "ID")
# rename Tmax volume variables to include threshold (>6s)
allpts$Tmax_D1_.6_volume <- allpts$Tmax_vol_d1
allpts$Tmax_D2_.6_volume <- allpts$Tmax_vol_d2
allpts$Tmax_vol_d1 <- c()
allpts$Tmax_vol_d2 <- c()
allpts$Tmax_change <- c()
allpts$relTmax_change <- c()
# create change variables for other thresholds (>4s)
allpts$Tmax_4_change <- allpts$Tmax_D2_.4_volume - allpts$Tmax_D1_.4_volume
allpts$relTmax_4_change <- (allpts$Tmax_4_change/allpts$Tmax_D1_.4_volume)*100
# create necessary variables (reperfusion / infarct growth binarized cut-offs)
allpts$reperf[allpts$relTmax_4_change<=-50] <- "Yes"
allpts$reperf[allpts$relTmax_4_change>-50] <- "No"
allpts$reperf <- factor(allpts$reperf)
allpts$infarct_growth[allpts$infarct_growth_D5FLAIR>=7] <- "Yes"
allpts$infarct_growth[allpts$infarct_growth_D5FLAIR<7] <- "No"
allpts$infarct_growth <- factor(allpts$infarct_growth)
# recode recanalization variable
allpts$Rekan[allpts$Rekan==0] <- "None" # no recanalization
allpts$Rekan[allpts$Rekan==1] <- "Full" # full recanalization
allpts$Rekan[allpts$Rekan==2] <- "Partial" # partial recanalization
allpts$Rekan <- factor(allpts$Rekan)
allpts$Rekan <- factor(allpts$Rekan,levels(allpts$Rekan)[c(1,3,2)])
# recode other categorical variables
allpts$sex[allpts$sex==1] <- "Male"
allpts$sex[allpts$sex==2] <- "Female"
allpts$sex <- factor(allpts$sex)
allpts$iv_tPR[allpts$iv_tPR==0] <- "No"
allpts$iv_tPR[allpts$iv_tPR==1] <- "Yes"
allpts$iv_tPR[allpts$iv_tPR==2] <- "Yes" # CHECK WITH KERSTEN IF THIS IS CORRECTLY CODED
allpts$iv_tPR <- factor(allpts$iv_tPR)
allpts$circulation[allpts$circulation==1] <- "Anterior"
allpts$circulation[allpts$circulation==2] <- "Posterior"
allpts$circulation <- factor(allpts$circulation)
# remove certain variables
allpts$no_recan_1 <- c()
allpts$VAR00002 <- c()
allpts$TSI_dich <- c()
# merge with variables defining occlusion location
occ_classfn <- read.table("occlusion_classfn.csv", header = T, sep=";")
allpts <- merge(allpts, occ_classfn, by = "ID")
# correctly code NaNs
allpts[allpts=="NaN"]<-NA
# Defines whether (T) or not (F) to show outliers in boxplots
OL = F
# descriptive stats
dfSummary(allpts[,c(3,4,13,15)], plain.ascii = F, style="grid", graph.col = F, varnumbers = F, valid.col=F)
allpts_cont <- allpts[,c(2,5,6:12,16:18,25,29,30)] # define continous variables
#stargazer(allpts_cont, type="html", median = T, iqr = T, digits = 1)
# plot recanalization according to reperfusion status
barplot(table(allpts$reperf, allpts$Rekan), legend.text = c("No reperfusion", "Reperfusion"), col=c("#1b9e77","#d95f02"), xlab="Recanalization", ylab="Number of patients", xpd=F,args.legend = list(x = "topleft"), ylim=c(0,80))
# cross-tabulation of recanalization/reperfusion
kable(table(allpts$reperf, allpts$Rekan)) %>%
kable_styling(full_width=F, position="center") %>%
add_header_above(c(" "=1, "Recanalization"=3)) %>%
group_rows("Reperfusion",1,2)
# test for differences between recanalization and reperfusion
print(chisq.test(table(allpts$reperf, allpts$Rekan)))
# test if circulation has influence on reperfusion in non-recanalizers
model_1 <- lmrob(allpts[allpts$Rekan=="None",]$relTmax_4_change~allpts[allpts$Rekan=="None",]$circulation)
# test if circulation has influence on reperfusion in non-recanalizers ADJUSTING FOR iv TPA
model_2 <- lmrob(allpts[allpts$Rekan=="None",]$relTmax_4_change~allpts[allpts$Rekan=="None",]$circulation*allpts[allpts$Rekan=="None",]$iv_tPR)
# test if circulation has influence on reperfusion in recanalizers (full OR partial)
model_3 <- lmrob(allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$relTmax_4_change~allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$circulation)
# test if circulation has influence on reperfusion in recanalizers (full OR partial) ADJUSTING FOR iv TPA
model_4 <- lmrob(allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$relTmax_4_change~allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$circulation*allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$iv_tPR)
stargazer(model_1, model_2, model_3,model_4, type="html", align = F, style="all", single.row=T)
boxplot(relTmax_4_change~circulation, data=allpts, xlab="Circulation", ylab="Extent of reperfusion (%)", outline=OL)
# check assumptions of robust GLM
#par(mfrow=c(3,2))
#plot(lmrob(allpts$relTmax_4_change~allpts$Rekan + allpts$circulation + allpts$TSI + allpts$iv_tPR))
# perform robust GLM
model_5 <- lmrob(allpts$relTmax_4_change~allpts$Rekan + allpts$iv_tPR + allpts$TSI + allpts$HIR1 + allpts$higashida_D1)
# plot extent of reperfusion in different recanalization grades
par(mfrow=c(1,1))
boxplot(relTmax_4_change~Rekan, data=allpts, col=c("#1b9e77","#1b9e77"), ylab="Extent of reperfusion (%)", xlab="Recanalization", outline=OL)
stargazer(model_5, type="html", align = F, style="all", single.row=T)
plot(allpts$HIR1, allpts$DWIvol_d1, xlab="Hypoperfusion intensity ratio", ylab="DWI lesion volume on day 1 (mL)",col = alpha("black", 0.4), pch=16)
print(cor.test(allpts$HIR1, allpts$DWIvol_d1, method="spearman"))
plot(allpts$HIR1, allpts$NIHSS_ad, xlab="Hypoperfusion intensity ratio", ylab="NIHSS on admission",col = alpha("black", 0.4), pch=16)
print(cor.test(allpts$HIR1, allpts$NIHSS_ad, method="spearman"))
plot(allpts$HIR1, allpts$infarct_growth_D5FLAIR, xlab="Hypoperfusion intensity ratio", ylab="Absolute DWI lesion growth (mL)",col = alpha("black", 0.4), pch=16)
print(cor.test(allpts$HIR1, allpts$infarct_growth_D5FLAIR, method="spearman"))
plot(allpts$HIR1, allpts$rel_DWIgrowth, xlab="Hypoperfusion intensity ratio", ylab="Relative DWI lesion growth (%)",col = alpha("black", 0.4), pch=16)
print(cor.test(allpts$HIR1, allpts$rel_DWIgrowth, method="spearman"))
# perform robust GLM
model_6 <- lmrob(mRS_d90~Rekan*reperf + NIHSS_ad + iv_tPR + HIR1*OCC_LOC_1 + higashida_D1, data = allpts)
boxplot(mRS_d90~Rekan + reperf, data=allpts, col=c("#1b9e77","#1b9e77","#1b9e77","#d95f02","#d95f02","#d95f02"), ylab="mRS day 90", outline=OL, xaxt="n")
axis(side=1, at=c(1,2,3,4,5,6), labels=c("None","Partial","Full","None","Partial","Full"))
legend("topright", legend = c("Non-reperfused","Reperfused"), fill=c("#1b9e77","#d95f02"))
plot(allEffects(model_6), multiline=T, ci.style="bars")
# perform robust GLM
model_7 <- lmrob(rel_DWIgrowth~Rekan*reperf + NIHSS_ad + iv_tPR + HIR1*OCC_LOC_1 + allpts$higashida_D1, data = allpts)
boxplot(rel_DWIgrowth~Rekan + reperf, data=allpts,col=c("#1b9e77","#1b9e77","#1b9e77","#d95f02","#d95f02","#d95f02"), ylab="Relative DWI growth", outline=OL, xaxt="n")
axis(side=1, at=c(1,2,3,4,5,6), labels=c("None","Partial","Full","None","Partial","Full"))
legend("topleft", legend = c("Non-reperfused","Reperfused"), fill=c("#1b9e77","#d95f02"))
plot(allEffects(model_7), multiline=T, ci.style="bars")
traceback()
knitr::opts_chunk$set(echo = TRUE)
# necessary packages
library(robustbase)
library(knitr)
library(xtable)
library(Hmisc)
library(TOSTER)
library(stargazer)
library(summarytools)
library(magrittr)
library(kableExtra)
library(effects)
library(pwr)
# load data
allpts <- read.table("all_data_v3.csv", header = T, sep=",")
colnames(allpts)[1] <- "ID"
# load volumetric data
auto_pts <- read.table("ALLVOLS_automated_AK_20180605.csv", header=T, sep=";") # patients automatically delineated
manual_pts <- read.table("ALLVOLS_manual_AK_20180605.csv", header=T, sep=";") # patients manually delineated
# remove # of voxels, keep only volumes (in mm3)
auto_pts <- auto_pts[,c(1,3,5,7,9,11,13)]
manual_pts <- manual_pts[,c(1,3,5,7,9,11,13)]
# convert volumes to mL (cm3)
auto_pts[,-1] <- auto_pts[,-1]*0.001
manual_pts[,-1] <- manual_pts[,-1]*0.001
# combine manual and automated volumes
vols_all_pts <- rbind(auto_pts, manual_pts)
# exclude subject 86 (not in Kersten's main dataset)
vols_all_pts <- vols_all_pts[!vols_all_pts$ID=="86",]
# calculate HIR for days 1 and 2
vols_all_pts$HIR1 <- vols_all_pts$Tmax_D1_.8_volume/vols_all_pts$Tmax_D1_.2_volume
vols_all_pts$HIR2 <- vols_all_pts$Tmax_D2_.8_volume/vols_all_pts$Tmax_D2_.2_volume
# merge volumes and HIR with the rest of the data
allpts <- merge(allpts, vols_all_pts, by = "ID")
# rename Tmax volume variables to include threshold (>6s)
allpts$Tmax_D1_.6_volume <- allpts$Tmax_vol_d1
allpts$Tmax_D2_.6_volume <- allpts$Tmax_vol_d2
allpts$Tmax_vol_d1 <- c()
allpts$Tmax_vol_d2 <- c()
allpts$Tmax_change <- c()
allpts$relTmax_change <- c()
# create change variables for other thresholds (>4s)
allpts$Tmax_4_change <- allpts$Tmax_D2_.4_volume - allpts$Tmax_D1_.4_volume
allpts$relTmax_4_change <- (allpts$Tmax_4_change/allpts$Tmax_D1_.4_volume)*100
# create necessary variables (reperfusion / infarct growth binarized cut-offs)
allpts$reperf[allpts$relTmax_4_change<=-50] <- "Yes"
allpts$reperf[allpts$relTmax_4_change>-50] <- "No"
allpts$reperf <- factor(allpts$reperf)
allpts$infarct_growth[allpts$infarct_growth_D5FLAIR>=7] <- "Yes"
allpts$infarct_growth[allpts$infarct_growth_D5FLAIR<7] <- "No"
allpts$infarct_growth <- factor(allpts$infarct_growth)
# recode recanalization variable
allpts$Rekan[allpts$Rekan==0] <- "None" # no recanalization
allpts$Rekan[allpts$Rekan==1] <- "Full" # full recanalization
allpts$Rekan[allpts$Rekan==2] <- "Partial" # partial recanalization
allpts$Rekan <- factor(allpts$Rekan)
allpts$Rekan <- factor(allpts$Rekan,levels(allpts$Rekan)[c(1,3,2)])
# recode other categorical variables
allpts$sex[allpts$sex==1] <- "Male"
allpts$sex[allpts$sex==2] <- "Female"
allpts$sex <- factor(allpts$sex)
allpts$iv_tPR[allpts$iv_tPR==0] <- "No"
allpts$iv_tPR[allpts$iv_tPR==1] <- "Yes"
allpts$iv_tPR[allpts$iv_tPR==2] <- "Yes" # CHECK WITH KERSTEN IF THIS IS CORRECTLY CODED
allpts$iv_tPR <- factor(allpts$iv_tPR)
allpts$circulation[allpts$circulation==1] <- "Anterior"
allpts$circulation[allpts$circulation==2] <- "Posterior"
allpts$circulation <- factor(allpts$circulation)
# remove certain variables
allpts$no_recan_1 <- c()
allpts$VAR00002 <- c()
allpts$TSI_dich <- c()
# merge with variables defining occlusion location
occ_classfn <- read.table("occlusion_classfn.csv", header = T, sep=";")
allpts <- merge(allpts, occ_classfn, by = "ID")
# correctly code NaNs
allpts[allpts=="NaN"]<-NA
# Defines whether (T) or not (F) to show outliers in boxplots
OL = F
allpts$higashida_D1
str(allpts$higashida_D1)
scatter(allpts$higashida_D1, allpts$higashida_D2)
plot(allpts$higashida_D1, allpts$higashida_D2, type=".")
plot(allpts$higashida_D1, allpts$higashida_D2, type="o")
plot(allpts$higashida_D1, allpts$higashida_D2, type="p")
barplot(allpts$higashida_D1)
barplot(allpts$higashida_D1,allpts$higashida_D2)
hist(allpts$higashida_D1)
levels(allpts$higashida_D1)
levels(factor(allpts$higashida_D1))
relevel()
?relevel()
?reorder()
length(allpts$higashida_D1)
length(levels(allpts$higashida_D1))
levels(allpts$higashida_D1)
level(allpts$higashida_D1)
knitr::opts_chunk$set(echo = TRUE)
# necessary packages
library(robustbase)
library(knitr)
library(xtable)
library(Hmisc)
library(TOSTER)
library(stargazer)
library(summarytools)
library(magrittr)
library(kableExtra)
library(effects)
library(pwr)
# load data
allpts <- read.table("all_data_v3.csv", header = T, sep=",")
colnames(allpts)[1] <- "ID"
# load volumetric data
auto_pts <- read.table("ALLVOLS_automated_AK_20180605.csv", header=T, sep=";") # patients automatically delineated
manual_pts <- read.table("ALLVOLS_manual_AK_20180605.csv", header=T, sep=";") # patients manually delineated
# remove # of voxels, keep only volumes (in mm3)
auto_pts <- auto_pts[,c(1,3,5,7,9,11,13)]
manual_pts <- manual_pts[,c(1,3,5,7,9,11,13)]
# convert volumes to mL (cm3)
auto_pts[,-1] <- auto_pts[,-1]*0.001
manual_pts[,-1] <- manual_pts[,-1]*0.001
# combine manual and automated volumes
vols_all_pts <- rbind(auto_pts, manual_pts)
# exclude subject 86 (not in Kersten's main dataset)
vols_all_pts <- vols_all_pts[!vols_all_pts$ID=="86",]
# calculate HIR for days 1 and 2
vols_all_pts$HIR1 <- vols_all_pts$Tmax_D1_.8_volume/vols_all_pts$Tmax_D1_.2_volume
vols_all_pts$HIR2 <- vols_all_pts$Tmax_D2_.8_volume/vols_all_pts$Tmax_D2_.2_volume
# merge volumes and HIR with the rest of the data
allpts <- merge(allpts, vols_all_pts, by = "ID")
# rename Tmax volume variables to include threshold (>6s)
allpts$Tmax_D1_.6_volume <- allpts$Tmax_vol_d1
allpts$Tmax_D2_.6_volume <- allpts$Tmax_vol_d2
allpts$Tmax_vol_d1 <- c()
allpts$Tmax_vol_d2 <- c()
allpts$Tmax_change <- c()
allpts$relTmax_change <- c()
# create change variables for other thresholds (>4s)
allpts$Tmax_4_change <- allpts$Tmax_D2_.4_volume - allpts$Tmax_D1_.4_volume
allpts$relTmax_4_change <- (allpts$Tmax_4_change/allpts$Tmax_D1_.4_volume)*100
# create necessary variables (reperfusion / infarct growth binarized cut-offs)
allpts$reperf[allpts$relTmax_4_change<=-50] <- "Yes"
allpts$reperf[allpts$relTmax_4_change>-50] <- "No"
allpts$reperf <- factor(allpts$reperf)
allpts$infarct_growth[allpts$infarct_growth_D5FLAIR>=7] <- "Yes"
allpts$infarct_growth[allpts$infarct_growth_D5FLAIR<7] <- "No"
allpts$infarct_growth <- factor(allpts$infarct_growth)
# recode recanalization variable
allpts$Rekan[allpts$Rekan==0] <- "None" # no recanalization
allpts$Rekan[allpts$Rekan==1] <- "Full" # full recanalization
allpts$Rekan[allpts$Rekan==2] <- "Partial" # partial recanalization
allpts$Rekan <- factor(allpts$Rekan)
allpts$Rekan <- factor(allpts$Rekan,levels(allpts$Rekan)[c(1,3,2)])
# recode other categorical variables
allpts$sex[allpts$sex==1] <- "Male"
allpts$sex[allpts$sex==2] <- "Female"
allpts$sex <- factor(allpts$sex)
allpts$iv_tPR[allpts$iv_tPR==0] <- "No"
allpts$iv_tPR[allpts$iv_tPR==1] <- "Yes"
allpts$iv_tPR[allpts$iv_tPR==2] <- "Yes" # CHECK WITH KERSTEN IF THIS IS CORRECTLY CODED
allpts$iv_tPR <- factor(allpts$iv_tPR)
allpts$circulation[allpts$circulation==1] <- "Anterior"
allpts$circulation[allpts$circulation==2] <- "Posterior"
allpts$circulation <- factor(allpts$circulation)
allpts$higashida_D1 <- factor(allpts$higashida_D1)
allpts$higashida_D1 <- factor(allpts$higashida_D1,levels(allpts$higashida_D1)[c(2,3,4,5,1)])
allpts$higashida_D2 <- factor(allpts$higashida_D2)
# remove certain variables
allpts$no_recan_1 <- c()
allpts$VAR00002 <- c()
allpts$TSI_dich <- c()
# merge with variables defining occlusion location
occ_classfn <- read.table("occlusion_classfn.csv", header = T, sep=";")
allpts <- merge(allpts, occ_classfn, by = "ID")
# correctly code NaNs
allpts[allpts=="NaN"]<-NA
# Defines whether (T) or not (F) to show outliers in boxplots
OL = F
# descriptive stats
dfSummary(allpts[,c(3,4,13,15)], plain.ascii = F, style="grid", graph.col = F, varnumbers = F, valid.col=F)
allpts_cont <- allpts[,c(2,5,6:12,16:18,25,29,30)] # define continous variables
#stargazer(allpts_cont, type="html", median = T, iqr = T, digits = 1)
# plot recanalization according to reperfusion status
barplot(table(allpts$reperf, allpts$Rekan), legend.text = c("No reperfusion", "Reperfusion"), col=c("#1b9e77","#d95f02"), xlab="Recanalization", ylab="Number of patients", xpd=F,args.legend = list(x = "topleft"), ylim=c(0,80))
# cross-tabulation of recanalization/reperfusion
kable(table(allpts$reperf, allpts$Rekan)) %>%
kable_styling(full_width=F, position="center") %>%
add_header_above(c(" "=1, "Recanalization"=3)) %>%
group_rows("Reperfusion",1,2)
# test for differences between recanalization and reperfusion
print(chisq.test(table(allpts$reperf, allpts$Rekan)))
# test if circulation has influence on reperfusion in non-recanalizers
model_1 <- lmrob(allpts[allpts$Rekan=="None",]$relTmax_4_change~allpts[allpts$Rekan=="None",]$circulation)
# test if circulation has influence on reperfusion in non-recanalizers ADJUSTING FOR iv TPA
model_2 <- lmrob(allpts[allpts$Rekan=="None",]$relTmax_4_change~allpts[allpts$Rekan=="None",]$circulation*allpts[allpts$Rekan=="None",]$iv_tPR)
# test if circulation has influence on reperfusion in recanalizers (full OR partial)
model_3 <- lmrob(allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$relTmax_4_change~allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$circulation)
# test if circulation has influence on reperfusion in recanalizers (full OR partial) ADJUSTING FOR iv TPA
model_4 <- lmrob(allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$relTmax_4_change~allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$circulation*allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$iv_tPR)
stargazer(model_1, model_2, model_3,model_4, type="html", align = F, style="all", single.row=T)
boxplot(relTmax_4_change~circulation, data=allpts, xlab="Circulation", ylab="Extent of reperfusion (%)", outline=OL)
# check assumptions of robust GLM
#par(mfrow=c(3,2))
#plot(lmrob(allpts$relTmax_4_change~allpts$Rekan + allpts$circulation + allpts$TSI + allpts$iv_tPR))
# perform robust GLM
model_5 <- lmrob(allpts$relTmax_4_change~allpts$Rekan + allpts$iv_tPR + allpts$TSI + allpts$HIR1 + allpts$higashida_D1)
# plot extent of reperfusion in different recanalization grades
par(mfrow=c(1,1))
boxplot(relTmax_4_change~Rekan, data=allpts, col=c("#1b9e77","#1b9e77"), ylab="Extent of reperfusion (%)", xlab="Recanalization", outline=OL)
stargazer(model_5, type="html", align = F, style="all", single.row=T)
plot(allpts$HIR1, allpts$DWIvol_d1, xlab="Hypoperfusion intensity ratio", ylab="DWI lesion volume on day 1 (mL)",col = alpha("black", 0.4), pch=16)
print(cor.test(allpts$HIR1, allpts$DWIvol_d1, method="spearman"))
plot(allpts$HIR1, allpts$NIHSS_ad, xlab="Hypoperfusion intensity ratio", ylab="NIHSS on admission",col = alpha("black", 0.4), pch=16)
print(cor.test(allpts$HIR1, allpts$NIHSS_ad, method="spearman"))
plot(allpts$HIR1, allpts$infarct_growth_D5FLAIR, xlab="Hypoperfusion intensity ratio", ylab="Absolute DWI lesion growth (mL)",col = alpha("black", 0.4), pch=16)
print(cor.test(allpts$HIR1, allpts$infarct_growth_D5FLAIR, method="spearman"))
plot(allpts$HIR1, allpts$rel_DWIgrowth, xlab="Hypoperfusion intensity ratio", ylab="Relative DWI lesion growth (%)",col = alpha("black", 0.4), pch=16)
print(cor.test(allpts$HIR1, allpts$rel_DWIgrowth, method="spearman"))
# perform robust GLM
model_6 <- lmrob(mRS_d90~Rekan*reperf + NIHSS_ad + iv_tPR + HIR1*OCC_LOC_1 + higashida_D1, data = allpts)
boxplot(mRS_d90~Rekan + reperf, data=allpts, col=c("#1b9e77","#1b9e77","#1b9e77","#d95f02","#d95f02","#d95f02"), ylab="mRS day 90", outline=OL, xaxt="n")
axis(side=1, at=c(1,2,3,4,5,6), labels=c("None","Partial","Full","None","Partial","Full"))
legend("topright", legend = c("Non-reperfused","Reperfused"), fill=c("#1b9e77","#d95f02"))
plot(allEffects(model_6), multiline=T, ci.style="bars")
# perform robust GLM
model_7 <- lmrob(rel_DWIgrowth~Rekan*reperf + NIHSS_ad + iv_tPR + HIR1*OCC_LOC_1 + higashida_D1, data = allpts)
boxplot(rel_DWIgrowth~Rekan + reperf, data=allpts,col=c("#1b9e77","#1b9e77","#1b9e77","#d95f02","#d95f02","#d95f02"), ylab="Relative DWI growth", outline=OL, xaxt="n")
axis(side=1, at=c(1,2,3,4,5,6), labels=c("None","Partial","Full","None","Partial","Full"))
legend("topleft", legend = c("Non-reperfused","Reperfused"), fill=c("#1b9e77","#d95f02"))
plot(allEffects(model_7), multiline=T, ci.style="bars")
model_8 <- lmrob(infarct_growth_D5FLAIR~Rekan*reperf + NIHSS_ad + iv_tPR + HIR1*OCC_LOC_1 + higashida_D1, data = allpts)
boxplot(infarct_growth_D5FLAIR~Rekan + reperf, data=allpts,col=c("#1b9e77","#1b9e77","#1b9e77","#d95f02","#d95f02","#d95f02"), ylab="Absolute DWI growth", outline=OL, xaxt="n")
axis(side=1, at=c(1,2,3,4,5,6), labels=c("None","Partial","Full","None","Partial","Full"))
legend("topleft", legend = c("Non-reperfused","Reperfused"), fill=c("#1b9e77","#d95f02"))
plot(allEffects(model_8), multiline=T, ci.style="bars")
model_9 <- lmrob(DWIgrowth~Rekan*reperf + NIHSS_ad + iv_tPR + HIR1*OCC_LOC_1 + higashida_D1, data = allpts)
boxplot(DWIgrowth~Rekan + reperf, data=allpts,col=c("#1b9e77","#1b9e77","#1b9e77","#d95f02","#d95f02","#d95f02"), ylab="Absolute DWI growth", outline=OL, xaxt="n")
axis(side=1, at=c(1,2,3,4,5,6), labels=c("None","Partial","Full","None","Partial","Full"))
legend("topleft", legend = c("Non-reperfused","Reperfused"), fill=c("#1b9e77","#d95f02"))
plot(allEffects(model_9), multiline=T, ci.style="bars")
model_9
levels(allpts$higashida_D1)
plot(allEffects(model_9), multiline=T, ci.style="bars")
allpts$higashida_change <- allpts$higashida_D1-allpts$higashida_D2
allpts$infarct_growth_D5FLAIR
boxplot(allpts$rel_DWIgrowth~allpts$higashida_D1)
boxplot(allpts$rel_DWIgrowth~allpts$higashida_D1, ylim=c(0,2000))
boxplot(allpts$rel_DWIgrowth~allpts$higashida_D2)
boxplot(allpts$rel_DWIgrowth~allpts$higashida_D1, ylim=c(0,2000))
boxplot(allpts$rel_DWIgrowth~allpts$higashida_D2, ylim=c(0,2000))
hist(allpts$higashida_change)
hist(as.numeric(allpts$higashida_change))
allpts$higashida_change
knitr::opts_chunk$set(echo = TRUE)
# necessary packages
library(robustbase)
library(knitr)
library(xtable)
library(Hmisc)
library(TOSTER)
library(stargazer)
library(summarytools)
library(magrittr)
library(kableExtra)
library(effects)
library(pwr)
# load data
allpts <- read.table("all_data_v3.csv", header = T, sep=",")
colnames(allpts)[1] <- "ID"
# load volumetric data
auto_pts <- read.table("ALLVOLS_automated_AK_20180605.csv", header=T, sep=";") # patients automatically delineated
manual_pts <- read.table("ALLVOLS_manual_AK_20180605.csv", header=T, sep=";") # patients manually delineated
# remove # of voxels, keep only volumes (in mm3)
auto_pts <- auto_pts[,c(1,3,5,7,9,11,13)]
manual_pts <- manual_pts[,c(1,3,5,7,9,11,13)]
# convert volumes to mL (cm3)
auto_pts[,-1] <- auto_pts[,-1]*0.001
manual_pts[,-1] <- manual_pts[,-1]*0.001
# combine manual and automated volumes
vols_all_pts <- rbind(auto_pts, manual_pts)
# exclude subject 86 (not in Kersten's main dataset)
vols_all_pts <- vols_all_pts[!vols_all_pts$ID=="86",]
# calculate HIR for days 1 and 2
vols_all_pts$HIR1 <- vols_all_pts$Tmax_D1_.8_volume/vols_all_pts$Tmax_D1_.2_volume
vols_all_pts$HIR2 <- vols_all_pts$Tmax_D2_.8_volume/vols_all_pts$Tmax_D2_.2_volume
# merge volumes and HIR with the rest of the data
allpts <- merge(allpts, vols_all_pts, by = "ID")
# rename Tmax volume variables to include threshold (>6s)
allpts$Tmax_D1_.6_volume <- allpts$Tmax_vol_d1
allpts$Tmax_D2_.6_volume <- allpts$Tmax_vol_d2
allpts$Tmax_vol_d1 <- c()
allpts$Tmax_vol_d2 <- c()
allpts$Tmax_change <- c()
allpts$relTmax_change <- c()
# create change variables for other thresholds (>4s)
allpts$Tmax_4_change <- allpts$Tmax_D2_.4_volume - allpts$Tmax_D1_.4_volume
allpts$relTmax_4_change <- (allpts$Tmax_4_change/allpts$Tmax_D1_.4_volume)*100
# create necessary variables (reperfusion / infarct growth binarized cut-offs)
allpts$reperf[allpts$relTmax_4_change<=-50] <- "Yes"
allpts$reperf[allpts$relTmax_4_change>-50] <- "No"
allpts$reperf <- factor(allpts$reperf)
allpts$infarct_growth[allpts$infarct_growth_D5FLAIR>=7] <- "Yes"
allpts$infarct_growth[allpts$infarct_growth_D5FLAIR<7] <- "No"
allpts$infarct_growth <- factor(allpts$infarct_growth)
# recode recanalization variable
allpts$Rekan[allpts$Rekan==0] <- "None" # no recanalization
allpts$Rekan[allpts$Rekan==1] <- "Full" # full recanalization
allpts$Rekan[allpts$Rekan==2] <- "Partial" # partial recanalization
allpts$Rekan <- factor(allpts$Rekan)
allpts$Rekan <- factor(allpts$Rekan,levels(allpts$Rekan)[c(1,3,2)])
# recode other categorical variables
allpts$sex[allpts$sex==1] <- "Male"
allpts$sex[allpts$sex==2] <- "Female"
allpts$sex <- factor(allpts$sex)
allpts$iv_tPR[allpts$iv_tPR==0] <- "No"
allpts$iv_tPR[allpts$iv_tPR==1] <- "Yes"
allpts$iv_tPR[allpts$iv_tPR==2] <- "Yes" # CHECK WITH KERSTEN IF THIS IS CORRECTLY CODED
allpts$iv_tPR <- factor(allpts$iv_tPR)
allpts$circulation[allpts$circulation==1] <- "Anterior"
allpts$circulation[allpts$circulation==2] <- "Posterior"
allpts$circulation <- factor(allpts$circulation)
allpts$higashida_change <- allpts$higashida_D2-allpts$higashida_D1
allpts$higashida_D1 <- factor(allpts$higashida_D1)
allpts$higashida_D2 <- factor(allpts$higashida_D2)
allpts$higashida_change <- factor(allpts$higashida_change)
# remove certain variables
allpts$no_recan_1 <- c()
allpts$VAR00002 <- c()
allpts$TSI_dich <- c()
# merge with variables defining occlusion location
occ_classfn <- read.table("occlusion_classfn.csv", header = T, sep=";")
allpts <- merge(allpts, occ_classfn, by = "ID")
# correctly code NaNs
allpts[allpts=="NaN"]<-NA
# Defines whether (T) or not (F) to show outliers in boxplots
OL = F
allpts$higashida_change
plot(allpts$higashida_D1, allpts$higashida_D2)
allpts$higashida_D1
allpts$higashida_D2
allpts$mismatch_vol
