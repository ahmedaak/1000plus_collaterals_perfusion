# test if circulation has influence on reperfusion in non-recanalizers
model_1 <- lmrob(allpts[allpts$Rekan=="None",]$relTmax_4_change~allpts[allpts$Rekan=="None",]$circulation)
# test if circulation has influence on reperfusion in non-recanalizers ADNJUSTING FOR iv TPA
model_2 <- lmrob(allpts[allpts$Rekan=="None",]$relTmax_4_change~allpts[allpts$Rekan=="None",]$circulation*allpts[allpts$Rekan=="None",]$iv_tPR)
# test if circulation has influence on reperfusion in recanalizers (full OR partial)
model_3 <- lmrob(allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$relTmax_4_change~allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$circulation)
stargazer(model_1, model_2, model_3, type="html", align = F, style="all", single.row=T)
# check assumptions of robust GLM
par(mfrow=c(3,2))
plot(lmrob(allpts$relTmax_4_change~allpts$Rekan + allpts$circulation + allpts$TSI + allpts$iv_tPR))
# perform robust GLM
model_4 <- lmrob(allpts$relTmax_4_change~allpts$Rekan + allpts$circulation + allpts$TSI + allpts$iv_tPR)
par(mfrow=c(1,1))
boxplot(relTmax_4_change~Rekan, data=allpts, col=c("#1b9e77","#1b9e77"), ylab="Relative Tmax change")
stargazer(model_4, type="html", align = F, style="all", single.row=T)
# perform robust GLM
model_5 <- lmrob(allpts$mRS_d90~allpts$Rekan*allpts$reperf + allpts$NIHSS_ad + allpts$iv_tPR +allpts$TSI + allpts$rel_DWIgrowth + allpts$mismatch_vol)
allpts$reperf
allpts$relTmax_4_change
View(allpts)
plot(allpts$HIR1, allpts$DWIgrowth)
plot(HIR1, DWIgrowth, data=allpts)
plot(allpts[,]$HIR1, allpts$DWIgrowth)
plot(allpts$HIR1, allpts$DWIgrowth)
plot(allpts[allpts$Rekan=="None",]$HIR1, allpts$DWIgrowth)
plot(allpts[allpts$Rekan=="None",]$HIR1, allpts[allpts$Rekan=="None",]$DWIgrowth)
points(allpts[allpts$Rekan=="Full",]$HIR1, allpts[allpts$Rekan=="Full",]$DWIgrowth, col="red")
points(allpts[allpts$Rekan=="Partial",]$HIR1, allpts[allpts$Rekan=="Partial",]$DWIgrowth, col="blue")
cor(allpts[allpts$Rekan=="None",]$HIR1, allpts[allpts$Rekan=="None",]$DWIgrowth)
cor(allpts[allpts$Rekan=="Full",]$HIR1, allpts[allpts$Rekan=="Full",]$DWIgrowth)
cor(allpts[allpts$Rekan=="Partial",]$HIR1, allpts[allpts$Rekan=="Partial",]$DWIgrowth)
cor(allpts[allpts$Rekan=="Partial",]$HIR1, allpts[allpts$Rekan=="Partial",]$rel_DWIgrowth)
cor(allpts[allpts$Rekan=="None",]$HIR1, allpts[allpts$Rekan=="None",]$rel_DWIgrowth)
cor(allpts[allpts$Rekan=="Full",]$HIR1, allpts[allpts$Rekan=="Full",]$rel_DWIgrowth)
plot(allpts[allpts$Rekan=="None",]$HIR1, allpts[allpts$Rekan=="None",]$DWIgrowth, pch=19)
points(allpts[allpts$Rekan=="Full",]$HIR1, allpts[allpts$Rekan=="Full",]$DWIgrowth, col="red", pch=19)
points(allpts[allpts$Rekan=="Partial",]$HIR1, allpts[allpts$Rekan=="Partial",]$DWIgrowth, col="blue", pch=19)
points(allpts[allpts$Rekan=="Partial",]$HIR1, allpts[allpts$Rekan=="Partial",]$DWIgrowth, col="green", pch=19)
plot(allpts[allpts$Rekan=="None",]$HIR1, allpts[allpts$Rekan=="None",]$DWIgrowth, pch=19, log="xy")
points(allpts[allpts$Rekan=="Partial",]$HIR1, allpts[allpts$Rekan=="Partial",]$DWIgrowth, col="blue", pch=19)
points(allpts[allpts$Rekan=="Partial",]$HIR1, allpts[allpts$Rekan=="Partial",]$DWIgrowth, col="green", pch=19)
points(allpts[allpts$Rekan=="Full",]$HIR1, allpts[allpts$Rekan=="Full",]$DWIgrowth, col="red", pch=19)
plot(allpts$HIR1, allpts$DWIvol_d1)
cor(allpts$HIR1, allpts$DWIvol_d1)
cor(allpts$HIR1, allpts$DWIvol_d2)
cor(allpts$HIR2, allpts$DWIvol_d2)
cor(allpts$HIR2, allpts$DWIvol_d2, na.rm=T)
cor(allpts$HIR2, allpts$DWIvol_d2, na.exclude=T)
cor(allpts$HIR2, allpts$DWIvol_d2)
cor(allpts$HIR1, allpts$DWIvol_d2)
cor(allpts$HIR1, allpts$DWIvol_d1)
plot(allpts$HIR1, allpts$DWIvol_d1, log="xy")
plot(allpts$HIR1, allpts$DWIvol_d1, log="y")
plot(allpts$HIR1, allpts$DWIvol_d1, log="x")
plot(allpts$HIR1, allpts$DWIvol_d1, log="xy")
cor(allpts$HIR1, allpts$DWIvol_d1)
cor.test(allpts$HIR1, allpts$DWIvol_d1)
cor.test(allpts$HIR1, allpts$DWIvol_d1, paired=T)
cor.test(allpts$HIR1, allpts$DWIvol_d1, method="Spearman")
cor.test(allpts$HIR1, allpts$DWIvol_d1, method="spearman")
cor.test(allpts$HIR1, allpts$mismatch_vol, method="spearman")
plot(allpts$HIR1, allpts$mismatch_vol)
plot(allpts$HIR1, allpts$mismatch_vol, log="xy")
plot(allpts$HIR1, allpts$mismatch_vol)
plot(allpts$HIR1, allpts$Tmax_D1_.2_volume-allpts$DWIvol_d1)
plot(allpts$HIR1, allpts$Tmax_D1_.4_volume-allpts$DWIvol_d1)
plot(allpts$HIR1, allpts$Tmax_D1_.5_volume-allpts$DWIvol_d1)
plot(allpts$HIR1, allpts$Tmax_D1_.6_volume-allpts$DWIvol_d1)
plot(allpts$HIR1, allpts$mismatch_vol)
plot(allpts$HIR1, allpts$Tmax_D1_.8_volume-allpts$DWIvol_d1)
cor.test(allpts$HIR1, allpts$Tmax_D1_.8_volume-allpts$DWIvol_d1, method = "spearman")
plot(allpts$HIR1, allpts$HIR2)
abline(h)
matplot(allpts$HIR1, allpts$HIR2)
boxplot(allpts$HIR1, allpts$HIR2)
ggplot(allpts, aes(x=))
lines(allpts$HIR1, allpts$HIR2)
boxplot(allpts$HIR1, allpts$HIR2)
lines(allpts$HIR1, allpts$HIR2)
plot(allpts$HIR1, allpts$HIR2)
plot(allpts$HIR1-allpts$HIR2)
plot(allpts$HIR2-allpts$HIR1)
plot(allpts$HIR2-allpts$HIR1, allpts$DWIgrowth)
cor.test(allpts$HIR2-allpts$HIR1, allpts$DWIgrowth)
plot(allpts$HIR2-allpts$HIR1, allpts$DWIgrowth)
plot(allpts$HIR2-allpts$HIR1, allpts$rel_DWIgrowth)
setwd("S:\AG\AG-CSB_NeuroRad\khalila\MULTIBAND\Reproducibility\ANALYSIS_AK_20180612\C_01\D0")
setwd("S:/AG/AG-CSB_NeuroRad/khalila/MULTIBAND/Reproducibility/ANALYSIS_AK_20180612/C_01/D0")
read.csv("vs_tc.txt")
vs <- read.csv("vs_tc.txt")
plot(vs)
View(vs)
plot(t(vs))
plot(vs)
plot(seq(from=0, to=lenght(vs)),vs)
plot(seq(from=0, to=length(vs)),vs)
plot(seq(from=1, to=length(vs)),vs)
length(vs)
nrows(vs)
nrow(vs)
plot(seq(from=1, to=nrow(vs)),vs)
plot(seq(from=0, to=nrow(vs)),vs)
seq(from=0, to=nrow(vs))
seq(from=0, to=nrow(vs), by=1)
plot(seq(from=0, to=nrow(vs), by=1),vs)
plot(seq(from=0, to=nrow(vs), by=1),t(vs))
nrow(from=0,to=nrow(vs),by=1)
nrow(seq(from=0,to=nrow(vs),by=1))
length(seq(from=0,to=nrow(vs),by=1))
length(seq(from=1,to=nrow(vs),by=1))
plot(seq(from=1, to=nrow(vs), by=1),t(vs))
plot(seq(from=1, to=nrow(vs), by=1),t(vs), type="l")
plot(seq(from=1, to=825*0.4, by=1),t(vs), type="l")
plot(seq(from=1, to=825*0.4),t(vs), type="l")
-51>-50
-51<-50
-51< -50
knitr::opts_chunk$set(echo = TRUE)
# necessary packages
library(robustbase)
library(knitr)
library(xtable)
library(Hmisc)
library(TOSTER)
library(stargazer)
library(summarytools)
# load data
allpts <- read.table("Carmela_Project.csv", header = T, sep=",")
colnames(allpts)[1] <- "ID"
# load volumetric data
auto_pts <- read.table("ALLVOLS_automated_AK_20180605.csv", header=T, sep=";") # patients automatically delineated
manual_pts <- read.table("ALLVOLS_manual_AK_20180605.csv", header=T, sep=";") # patients manually delineated
# remove # of voxels, keep only volumes (in mm3)
auto_pts <- auto_pts[,c(1,3,5,7,9,11,13)]
manual_pts <- manual_pts[,c(1,3,5,7,9,11,13)]
# convert volumes to mL (cm3)
auto_pts[,-1] <- auto_pts[,-1]*0.001
manual_pts[,-1] <- manual_pts[,-1]*0.001
# combine manual and automated volumes
vols_all_pts <- rbind(auto_pts, manual_pts)
# exclude subject 86 (not in Kersten's main dataset)
vols_all_pts <- vols_all_pts[!vols_all_pts$ID=="86",]
# calculate HIR for days 1 and 2
vols_all_pts$HIR1 <- vols_all_pts$Tmax_D1_.8_volume/vols_all_pts$Tmax_D1_.2_volume
vols_all_pts$HIR2 <- vols_all_pts$Tmax_D2_.8_volume/vols_all_pts$Tmax_D2_.2_volume
# merge volumes and HIR with the rest of the data
allpts <- merge(allpts, vols_all_pts, by = "ID")
# rename Tmax volume variables to include threshold (>6s)
allpts$Tmax_D1_.6_volume <- allpts$Tmax_vol_d1
allpts$Tmax_D2_.6_volume <- allpts$Tmax_vol_d2
allpts$Tmax_vol_d1 <- c()
allpts$Tmax_vol_d2 <- c()
allpts$Tmax_change <- c()
allpts$relTmax_change <- c()
# create change variables for other thresholds (>4s)
allpts$Tmax_4_change <- allpts$Tmax_D2_.4_volume - allpts$Tmax_D1_.4_volume
allpts$relTmax_4_change <- (allpts$Tmax_4_change/allpts$Tmax_D1_.4_volume)*100
# create necessary variables (reperfusion / infarct growth binarized cut-offs)
allpts$reperf[allpts$relTmax_4_change<=-50] <- "Yes"
allpts$reperf[allpts$relTmax_4_change>-50] <- "No"
allpts$reperf <- factor(allpts$reperf)
allpts$infarct_growth[allpts$DWIgrowth>=7] <- "Yes"
allpts$infarct_growth[allpts$DWIgrowth<7] <- "No"
allpts$infarct_growth <- factor(allpts$infarct_growth)
# recode recanalization variable
allpts$Rekan[allpts$Rekan==0] <- "None" # no recanalization
allpts$Rekan[allpts$Rekan==1] <- "Full" # full recanalization
allpts$Rekan[allpts$Rekan==2] <- "Partial" # partial recanalization
allpts$Rekan <- factor(allpts$Rekan)
# recode other categorical variables
allpts$sex[allpts$sex==1] <- "Male"
allpts$sex[allpts$sex==2] <- "Female"
allpts$sex <- factor(allpts$sex)
allpts$iv_tPR[allpts$iv_tPR==0] <- "No"
allpts$iv_tPR[allpts$iv_tPR==1] <- "Yes"
allpts$iv_tPR[allpts$iv_tPR==2] <- "Yes" # CHECK WITH KERSTEN IF THIS IS CORRECTLY CODED
allpts$iv_tPR <- factor(allpts$iv_tPR)
allpts$circulation[allpts$circulation==1] <- "Anterior"
allpts$circulation[allpts$circulation==2] <- "Posterior"
allpts$circulation <- factor(allpts$circulation)
# remove certain variables
allpts$no_recan_1 <- c()
allpts$VAR00002 <- c()
allpts$TSI_dich <- c()
View(allpts)
factor(x,levels(x)[c(4,5,1:3)]
allpts$Rekan
levels(allpts$Rekan)
factor(allpts$Rekan,levels(allpts$Rekan)[c(2,3,1)]
factor(allpts$Rekan,levels(allpts$Rekan)[c(2,3,1)])
barplot(table(allpts$reperf, factor(allpts$Rekan,levels(allpts$Rekan)[c(2,3,1)])), legend.text = c("No reperfusion", "Reperfusion"), col=c("#1b9e77","#d95f02"), xlab="Recanalization", ylab="Number of patients", xpd=F,args.legend = list(x = "topleft"), ylim=c(0,80))
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
allpts$iv_tPR
levels(allpts$iv_tPR)
str(allpts$iv_tPR)
lmrob(allpts$relTmax_4_change~allpts$circulation*allpts$iv_tPR)
library(robustbase)
lmrob(allpts$relTmax_4_change~allpts$circulation*allpts$iv_tPR)
anova(lmrob(allpts$relTmax_4_change~allpts$circulation*allpts$iv_tPR))
lmrob(allpts$relTmax_4_change~allpts$circulation*allpts$iv_tPR)
summary(lmrob(allpts$relTmax_4_change~allpts$circulation*allpts$iv_tPR))
summary(lmrob(allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$relTmax_4_change~allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$circulation*allpts[allpts$Rekan=="Full"|allpts$Rekan=="Partial",]$iv_tPR))
cite(robustbase)
cite(lmrob)
citation(robustbase)
citation(lmrob)
citation("robustbase")
summary(lmrob(allpts$mRS_d90~allpts$Rekan*allpts$reperf + allpts$NIHSS_ad + allpts$iv_tPR + allpts$HIR1))
lmrob(allpts$mRS_d90~allpts$Rekan)
summary(lmrob(allpts$mRS_d90~allpts$Rekan))
summary(lmrob(allpts$mRS_d90~allpts$Rekan + allpts$iv_tPR))
summary(lmrob(allpts$mRS_d90~allpts$Rekan + allpts$NIHSS_ad))
summary(lmrob(allpts$mRS_d90~allpts$Rekan + allpts$NIHSS_ad + allpts$iv_tPR))
summary(lmrob(allpts$mRS_d90~allpts$Rekan + allpts$NIHSS_ad + allpts$iv_tPR + allpts$reperf))
summary(lmrob(allpts$mRS_d90~allpts$Rekan + allpts$NIHSS_ad + allpts$reperf))
summary(lmrob(allpts$mRS_d90~allpts$Rekan + allpts$reperf))
summary(lmrob(allpts$mRS_d90~allpts$reperf))
boxplot(allpts$mRS_d90~allpts$reperf)
summary(lmrob(allpts$mRS_d90~allpts$Rekan*allpts$reperf))
summary(lmrob(allpts$mRS_d90~allpts$Rekan + allpts$NIHSS_ad + allpts$iv_tPR + allpts$reperf))
summary(lmrob(allpts$DWIgrowth~allpts$Rekan + allpts$reperf + allpts$NIHSS_ad + allpts$iv_tPR + allpts$HIR1))
summary(lmrob(allpts$DWIgrowth~allpts$Rekan + allpts$NIHSS_ad + allpts$iv_tPR + allpts$HIR1))
summary(lmrob(allpts$DWIgrowth~allpts$Rekan + allpts$reperf + allpts$HIR1))
plot(allpts$mRS_d90,allpts$HIR1)
cor.test(allpts$mRS_d90,allpts$HIR1)
cor.test(allpts$mRS_d90,allpts$HIR1, type="spearman")
cor.test(allpts$mRS_d90,allpts$HIR1, type="Spearman")
cor.test(allpts$mRS_d90,allpts$HIR1, method="Spearman")
cor.test(allpts$mRS_d90,allpts$HIR1, method="spearman")
summary(lmrob(allpts$DWIgrowth~allpts$Rekan + allpts$NIHSS_ad + allpts$HIR1))
smoothScatter(allpts$HIR1, allpts$mRS_d90
)
smoothScatter(allpts$HIR1, allpts$infarct_growth)
smoothScatter(allpts$HIR1, allpts$DWIgrowth)
plot(allpts$HIR1, allpts$DWIgrowth)
plot(allpts$HIR1, allpts$rel_DWIgrowth)
cor.test(allpts$HIR1, allpts$rel_DWIgrowth)
plot(allpts$HIR1, allpts$rel_DWIgrowth, log="x,y")
cor.test(allpts$HIR1, allpts$rel_DWIgrowth)
plot(allpts$HIR1, allpts$rel_DWIgrowth)
plot(allpts$HIR1, allpts$rel_DWIgrowth, log="y")
knitr::opts_chunk$set(echo = TRUE)
# necessary packages
library(robustbase)
library(knitr)
library(xtable)
library(Hmisc)
library(TOSTER)
library(stargazer)
library(summarytools)
#library(dplyr)
# load data
allpts <- read.table("Carmela_Project.csv", header = T, sep=",")
colnames(allpts)[1] <- "ID"
# load volumetric data
auto_pts <- read.table("ALLVOLS_automated_AK_20180605.csv", header=T, sep=";") # patients automatically delineated
manual_pts <- read.table("ALLVOLS_manual_AK_20180605.csv", header=T, sep=";") # patients manually delineated
# remove # of voxels, keep only volumes (in mm3)
auto_pts <- auto_pts[,c(1,3,5,7,9,11,13)]
manual_pts <- manual_pts[,c(1,3,5,7,9,11,13)]
# convert volumes to mL (cm3)
auto_pts[,-1] <- auto_pts[,-1]*0.001
manual_pts[,-1] <- manual_pts[,-1]*0.001
# combine manual and automated volumes
vols_all_pts <- rbind(auto_pts, manual_pts)
# exclude subject 86 (not in Kersten's main dataset)
vols_all_pts <- vols_all_pts[!vols_all_pts$ID=="86",]
# calculate HIR for days 1 and 2
vols_all_pts$HIR1 <- vols_all_pts$Tmax_D1_.8_volume/vols_all_pts$Tmax_D1_.2_volume
vols_all_pts$HIR2 <- vols_all_pts$Tmax_D2_.8_volume/vols_all_pts$Tmax_D2_.2_volume
# merge volumes and HIR with the rest of the data
allpts <- merge(allpts, vols_all_pts, by = "ID")
# rename Tmax volume variables to include threshold (>6s)
allpts$Tmax_D1_.6_volume <- allpts$Tmax_vol_d1
allpts$Tmax_D2_.6_volume <- allpts$Tmax_vol_d2
allpts$Tmax_vol_d1 <- c()
allpts$Tmax_vol_d2 <- c()
allpts$Tmax_change <- c()
allpts$relTmax_change <- c()
# create change variables for other thresholds (>4s)
allpts$Tmax_4_change <- allpts$Tmax_D2_.4_volume - allpts$Tmax_D1_.4_volume
allpts$relTmax_4_change <- (allpts$Tmax_4_change/allpts$Tmax_D1_.4_volume)*100
# create necessary variables (reperfusion / infarct growth binarized cut-offs)
allpts$reperf[allpts$relTmax_4_change<=-50] <- "Yes"
allpts$reperf[allpts$relTmax_4_change>-50] <- "No"
allpts$reperf <- factor(allpts$reperf)
allpts$infarct_growth[allpts$DWIgrowth>=7] <- "Yes"
allpts$infarct_growth[allpts$DWIgrowth<7] <- "No"
allpts$infarct_growth <- factor(allpts$infarct_growth)
# recode recanalization variable
allpts$Rekan[allpts$Rekan==0] <- "None" # no recanalization
allpts$Rekan[allpts$Rekan==1] <- "Full" # full recanalization
allpts$Rekan[allpts$Rekan==2] <- "Partial" # partial recanalization
allpts$Rekan <- factor(allpts$Rekan,levels(allpts$Rekan)[c(2,3,1)])
# recode other categorical variables
allpts$sex[allpts$sex==1] <- "Male"
allpts$sex[allpts$sex==2] <- "Female"
allpts$sex <- factor(allpts$sex)
allpts$iv_tPR[allpts$iv_tPR==0] <- "No"
allpts$iv_tPR[allpts$iv_tPR==1] <- "Yes"
allpts$iv_tPR[allpts$iv_tPR==2] <- "Yes" # CHECK WITH KERSTEN IF THIS IS CORRECTLY CODED
allpts$iv_tPR <- factor(allpts$iv_tPR)
allpts$circulation[allpts$circulation==1] <- "Anterior"
allpts$circulation[allpts$circulation==2] <- "Posterior"
allpts$circulation <- factor(allpts$circulation)
# remove certain variables
allpts$no_recan_1 <- c()
allpts$VAR00002 <- c()
allpts$TSI_dich <- c()
# cross-tabulation of recanalization/reperfusion
kable(table(allpts$reperf, allpts$Rekan)) #kable_styling(full_width = F)
# plot recanalization according to reperfusion status
barplot(table(allpts$reperf, allpts$Rekan), legend.text = c("No reperfusion", "Reperfusion"), col=c("#1b9e77","#d95f02"), xlab="Recanalization", ylab="Number of patients", xpd=F,args.legend = list(x = "topleft"), ylim=c(0,80))
table(allpts$reperf,allpts$Rekan)
allpts$Rekan
factor(allpts$Rekan,levels(allpts$Rekan)[c(2,3,1)])
knitr::opts_chunk$set(echo = TRUE)
# necessary packages
library(robustbase)
library(knitr)
library(xtable)
library(Hmisc)
library(TOSTER)
library(stargazer)
library(summarytools)
#library(dplyr)
# load data
allpts <- read.table("Carmela_Project.csv", header = T, sep=",")
colnames(allpts)[1] <- "ID"
# load volumetric data
auto_pts <- read.table("ALLVOLS_automated_AK_20180605.csv", header=T, sep=";") # patients automatically delineated
manual_pts <- read.table("ALLVOLS_manual_AK_20180605.csv", header=T, sep=";") # patients manually delineated
# remove # of voxels, keep only volumes (in mm3)
auto_pts <- auto_pts[,c(1,3,5,7,9,11,13)]
manual_pts <- manual_pts[,c(1,3,5,7,9,11,13)]
# convert volumes to mL (cm3)
auto_pts[,-1] <- auto_pts[,-1]*0.001
manual_pts[,-1] <- manual_pts[,-1]*0.001
# combine manual and automated volumes
vols_all_pts <- rbind(auto_pts, manual_pts)
# exclude subject 86 (not in Kersten's main dataset)
vols_all_pts <- vols_all_pts[!vols_all_pts$ID=="86",]
# calculate HIR for days 1 and 2
vols_all_pts$HIR1 <- vols_all_pts$Tmax_D1_.8_volume/vols_all_pts$Tmax_D1_.2_volume
vols_all_pts$HIR2 <- vols_all_pts$Tmax_D2_.8_volume/vols_all_pts$Tmax_D2_.2_volume
# merge volumes and HIR with the rest of the data
allpts <- merge(allpts, vols_all_pts, by = "ID")
# rename Tmax volume variables to include threshold (>6s)
allpts$Tmax_D1_.6_volume <- allpts$Tmax_vol_d1
allpts$Tmax_D2_.6_volume <- allpts$Tmax_vol_d2
allpts$Tmax_vol_d1 <- c()
allpts$Tmax_vol_d2 <- c()
allpts$Tmax_change <- c()
allpts$relTmax_change <- c()
# create change variables for other thresholds (>4s)
allpts$Tmax_4_change <- allpts$Tmax_D2_.4_volume - allpts$Tmax_D1_.4_volume
allpts$relTmax_4_change <- (allpts$Tmax_4_change/allpts$Tmax_D1_.4_volume)*100
# create necessary variables (reperfusion / infarct growth binarized cut-offs)
allpts$reperf[allpts$relTmax_4_change<=-50] <- "Yes"
allpts$reperf[allpts$relTmax_4_change>-50] <- "No"
allpts$reperf <- factor(allpts$reperf)
allpts$infarct_growth[allpts$DWIgrowth>=7] <- "Yes"
allpts$infarct_growth[allpts$DWIgrowth<7] <- "No"
allpts$infarct_growth <- factor(allpts$infarct_growth)
# recode recanalization variable
allpts$Rekan[allpts$Rekan==0] <- "None" # no recanalization
allpts$Rekan[allpts$Rekan==1] <- "Full" # full recanalization
allpts$Rekan[allpts$Rekan==2] <- "Partial" # partial recanalization
#allpts$Rekan <- factor(allpts$Rekan,levels(allpts$Rekan)[c(2,3,1)])
# recode other categorical variables
allpts$sex[allpts$sex==1] <- "Male"
allpts$sex[allpts$sex==2] <- "Female"
allpts$sex <- factor(allpts$sex)
allpts$iv_tPR[allpts$iv_tPR==0] <- "No"
allpts$iv_tPR[allpts$iv_tPR==1] <- "Yes"
allpts$iv_tPR[allpts$iv_tPR==2] <- "Yes" # CHECK WITH KERSTEN IF THIS IS CORRECTLY CODED
allpts$iv_tPR <- factor(allpts$iv_tPR)
allpts$circulation[allpts$circulation==1] <- "Anterior"
allpts$circulation[allpts$circulation==2] <- "Posterior"
allpts$circulation <- factor(allpts$circulation)
# remove certain variables
allpts$no_recan_1 <- c()
allpts$VAR00002 <- c()
allpts$TSI_dich <- c()
allpts$Rekan
factor(allpts$Rekan,levels(allpts$Rekan)[c(2,3,1)])
factor(allpts$Rekan,levels(allpts$Rekan)[c("None","Partial","Full")])
levels(allpts$Rekan)
allpts$Rekan
factor(allpts$Rekan)
levels(factor(allpts$Rekan))
allpts$Rekan <- factor(allpts$Rekan)
factor(allpts$Rekan,levels(allpts$Rekan)[c(2,3,1)])
levels(factor(allpts$Rekan,levels(allpts$Rekan)[c(2,3,1)]))
plot(allpts$HIR1, allpts$DWIvol_d1)
cor.test(allpts$HIR1, allpts$DWIvol_d1)
cor.test(allpts$HIR1, allpts$DWIvol_d1, method="spearman")
plot(allpts$HIR1, allpts$HIR2)
abline(x=<)
abline(x=y)
matplot(allpts$HIR1, allpts$HIR2)
boxplot(allpts$HIR1, allpts$HIR2)
ggplot(data=data.frame(allpts), aes(x=HIR1, y=HIR2)) +
geom_line()+
geom_point()
plot(allpts$HIR1, allpts$HIR2)
matplot(allpts$HIR1, allpts$HIR2)
?matplot
matplot(allpts)
boxplot(allpts$HIR1-allpts$HIR2)
plot(allpts$HIR1-allpts$HIR2, allpts$infarct_growth)
plot(allpts$HIR1-allpts$HIR2, allpts$DWIgrowth)
cor.test(allpts$HIR1-allpts$HIR2, allpts$DWIgrowth)
cor.test(allpts$HIR1-allpts$HIR2, allpts$rel_DWIgrowth)
plot(allpts$HIR1-allpts$HIR2, allpts$rel_DWIgrowth)
plot(allpts$HIR1-allpts$HIR2, allpts$DWIgrowth)
cor.test(allpts$HIR1, allpts$Tmax_D1_.2_volume)
cor.test(allpts$HIR1, allpts$Tmax_D1_.4_volume)
cor.test(allpts$HIR1, allpts$NIHSS_ad)
plot(allpts$HIR1, allpts$Tmax_D1_.2_volume)
plot(allpts$HIR1, allpts$Tmax_D1_.6_volume)
plot(allpts$HIR1, allpts$Tmax_D1_.8_volume)
cor.test(allpts$HIR1, allpts$Tmax_D1_.8_volume)
cor.test(allpts$HIR1, allpts$Tmax_D1_.2_volume)
plot(allpts$HIR1, allpts$Tmax_D1_.2_volume)
cor.test(allpts$HIR1-allpts$HIR2, allpts$rel_DWIgrowth, method="spearman")
boxplot(allpts$HIR1~allpts$Rekan)
plot(allpts$DWIgrowth, allpts$mRS_d90)
plot(allpts$rel_DWIgrowth, allpts$mRS_d90)
plot(allpts$DWIgrowth, allpts$mRS_d90)
plot(allpts$DWIgrowth, allpts$mRS_d90)
plot(allpts$rel_DWIgrowth, allpts$mRS_d90)
knitr::opts_chunk$set(echo = TRUE)
# necessary packages
library(robustbase)
library(knitr)
library(xtable)
library(Hmisc)
library(TOSTER)
library(stargazer)
library(summarytools)
#library(dplyr)
# load data
allpts <- read.table("Carmela_Project.csv", header = T, sep=";")
colnames(allpts)[1] <- "ID"
# load volumetric data
auto_pts <- read.table("ALLVOLS_automated_AK_20180605.csv", header=T, sep=";") # patients automatically delineated
manual_pts <- read.table("ALLVOLS_manual_AK_20180605.csv", header=T, sep=";") # patients manually delineated
# remove # of voxels, keep only volumes (in mm3)
auto_pts <- auto_pts[,c(1,3,5,7,9,11,13)]
manual_pts <- manual_pts[,c(1,3,5,7,9,11,13)]
# convert volumes to mL (cm3)
auto_pts[,-1] <- auto_pts[,-1]*0.001
manual_pts[,-1] <- manual_pts[,-1]*0.001
# combine manual and automated volumes
vols_all_pts <- rbind(auto_pts, manual_pts)
# exclude subject 86 (not in Kersten's main dataset)
vols_all_pts <- vols_all_pts[!vols_all_pts$ID=="86",]
# calculate HIR for days 1 and 2
vols_all_pts$HIR1 <- vols_all_pts$Tmax_D1_.8_volume/vols_all_pts$Tmax_D1_.2_volume
vols_all_pts$HIR2 <- vols_all_pts$Tmax_D2_.8_volume/vols_all_pts$Tmax_D2_.2_volume
# merge volumes and HIR with the rest of the data
allpts <- merge(allpts, vols_all_pts, by = "ID")
# rename Tmax volume variables to include threshold (>6s)
allpts$Tmax_D1_.6_volume <- allpts$Tmax_vol_d1
allpts$Tmax_D2_.6_volume <- allpts$Tmax_vol_d2
allpts$Tmax_vol_d1 <- c()
allpts$Tmax_vol_d2 <- c()
allpts$Tmax_change <- c()
allpts$relTmax_change <- c()
# create change variables for other thresholds (>4s)
allpts$Tmax_4_change <- allpts$Tmax_D2_.4_volume - allpts$Tmax_D1_.4_volume
allpts$relTmax_4_change <- (allpts$Tmax_4_change/allpts$Tmax_D1_.4_volume)*100
# create necessary variables (reperfusion / infarct growth binarized cut-offs)
allpts$reperf[allpts$relTmax_4_change<=-50] <- "Yes"
allpts$reperf[allpts$relTmax_4_change>-50] <- "No"
allpts$reperf <- factor(allpts$reperf)
allpts$infarct_growth[allpts$DWIgrowth>=7] <- "Yes"
allpts$infarct_growth[allpts$DWIgrowth<7] <- "No"
allpts$infarct_growth <- factor(allpts$infarct_growth)
# recode recanalization variable
allpts$Rekan[allpts$Rekan==0] <- "None" # no recanalization
allpts$Rekan[allpts$Rekan==1] <- "Full" # full recanalization
allpts$Rekan[allpts$Rekan==2] <- "Partial" # partial recanalization
allpts$Rekan <- factor(allpts$Rekan)
allpts$Rekan <- factor(allpts$Rekan,levels(allpts$Rekan)[c(2,3,1)])
# recode other categorical variables
allpts$sex[allpts$sex==1] <- "Male"
allpts$sex[allpts$sex==2] <- "Female"
allpts$sex <- factor(allpts$sex)
allpts$iv_tPR[allpts$iv_tPR==0] <- "No"
allpts$iv_tPR[allpts$iv_tPR==1] <- "Yes"
allpts$iv_tPR[allpts$iv_tPR==2] <- "Yes" # CHECK WITH KERSTEN IF THIS IS CORRECTLY CODED
allpts$iv_tPR <- factor(allpts$iv_tPR)
allpts$circulation[allpts$circulation==1] <- "Anterior"
allpts$circulation[allpts$circulation==2] <- "Posterior"
allpts$circulation <- factor(allpts$circulation)
# remove certain variables
allpts$no_recan_1 <- c()
allpts$VAR00002 <- c()
allpts$TSI_dich <- c()
plot(allpts$rel_DWIgrowth, allpts$mRS_d90)
plot(allpts$DWIgrowth, allpts$mRS_d90)
cor.test(allpts$DWIgrowth, allpts$mRS_d90, method="spearman")
?axis
histogram(allpts$DWIgrowth)
plot(density(allpts$DWIgrowth))
boxplot(allpts$DWIgrowth~allpts$Rekan)
boxplot(allpts$infarct_growth~allpts$Rekan)
plot(allpts$infarct_growth~allpts$Rekan)
